//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.01.27 at 11:38:39 PM PST
//

package oasis.names.tc.xacml._3_0.core.schema.wd_17;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;

/**
 * <p>
 * Java class for PolicySetType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PolicySetType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicyIssuer" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicySetDefaults" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}Target"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicySet"/&gt;
 *           &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}Policy"/&gt;
 *           &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicySetIdReference"/&gt;
 *           &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicyIdReference"/&gt;
 *           &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}CombinerParameters"/&gt;
 *           &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicyCombinerParameters"/&gt;
 *           &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicySetCombinerParameters"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}ObligationExpressions" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}AdviceExpressions" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="PolicySetId" use="required" type="{http://www.w3.org/2001/XMLSchema}anyURI" /&gt;
 *       &lt;attribute name="Version" use="required" type="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}VersionType" /&gt;
 *       &lt;attribute name="PolicyCombiningAlgId" use="required" type="{http://www.w3.org/2001/XMLSchema}anyURI" /&gt;
 *       &lt;attribute name="MaxDelegationDepth" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PolicySetType", propOrder = {
    "description", "policyIssuer", "policySetDefaults", "target",
    "policySetOrPolicyOrPolicySetIdReference", "obligationExpressions", "adviceExpressions"})
public class PolicySetType implements Cloneable {

  @XmlElement(name = "Description")
  protected String description;
  @XmlElement(name = "PolicyIssuer")
  protected PolicyIssuerType policyIssuer;
  @XmlElement(name = "PolicySetDefaults")
  protected DefaultsType policySetDefaults;
  @XmlElement(name = "Target", required = true)
  protected TargetType target;
  @XmlElementRefs({
      @XmlElementRef(name = "Policy", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PolicySet", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PolicySetIdReference", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "CombinerParameters", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PolicyCombinerParameters", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PolicyIdReference", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PolicySetCombinerParameters", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false)})
  protected List<JAXBElement<?>> policySetOrPolicyOrPolicySetIdReference;
  @XmlElement(name = "ObligationExpressions")
  protected ObligationExpressionsType obligationExpressions;
  @XmlElement(name = "AdviceExpressions")
  protected AdviceExpressionsType adviceExpressions;
  @XmlAttribute(name = "PolicySetId", required = true)
  @XmlSchemaType(name = "anyURI")
  protected String policySetId;
  @XmlAttribute(name = "Version", required = true)
  protected String version;
  @XmlAttribute(name = "PolicyCombiningAlgId", required = true)
  @XmlSchemaType(name = "anyURI")
  protected String policyCombiningAlgId;
  @XmlAttribute(name = "MaxDelegationDepth")
  protected BigInteger maxDelegationDepth;
  protected transient List<JAXBElement<?>> policySetOrPolicyOrPolicySetIdReference_RO = null;

  /**
   * Gets the value of the description property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getDescription() {
    return description;
  }

  /**
   * Sets the value of the description property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  protected void setDescription(String value) {
    this.description = value;
  }

  /**
   * Gets the value of the policyIssuer property.
   * 
   * @return possible object is {@link PolicyIssuerType }
   * 
   */
  public PolicyIssuerType getPolicyIssuer() {
    return policyIssuer;
  }

  /**
   * Sets the value of the policyIssuer property.
   * 
   * @param value allowed object is {@link PolicyIssuerType }
   * 
   */
  protected void setPolicyIssuer(PolicyIssuerType value) {
    this.policyIssuer = value;
  }

  /**
   * Gets the value of the policySetDefaults property.
   * 
   * @return possible object is {@link DefaultsType }
   * 
   */
  public DefaultsType getPolicySetDefaults() {
    return policySetDefaults;
  }

  /**
   * Sets the value of the policySetDefaults property.
   * 
   * @param value allowed object is {@link DefaultsType }
   * 
   */
  protected void setPolicySetDefaults(DefaultsType value) {
    this.policySetDefaults = value;
  }

  /**
   * Gets the value of the target property.
   * 
   * @return possible object is {@link TargetType }
   * 
   */
  public TargetType getTarget() {
    return target;
  }

  /**
   * Sets the value of the target property.
   * 
   * @param value allowed object is {@link TargetType }
   * 
   */
  protected void setTarget(TargetType value) {
    this.target = value;
  }

  /**
   * Gets the value of the obligationExpressions property.
   * 
   * @return possible object is {@link ObligationExpressionsType }
   * 
   */
  public ObligationExpressionsType getObligationExpressions() {
    return obligationExpressions;
  }

  /**
   * Sets the value of the obligationExpressions property.
   * 
   * @param value allowed object is {@link ObligationExpressionsType }
   * 
   */
  protected void setObligationExpressions(ObligationExpressionsType value) {
    this.obligationExpressions = value;
  }

  /**
   * Gets the value of the adviceExpressions property.
   * 
   * @return possible object is {@link AdviceExpressionsType }
   * 
   */
  public AdviceExpressionsType getAdviceExpressions() {
    return adviceExpressions;
  }

  /**
   * Sets the value of the adviceExpressions property.
   * 
   * @param value allowed object is {@link AdviceExpressionsType }
   * 
   */
  protected void setAdviceExpressions(AdviceExpressionsType value) {
    this.adviceExpressions = value;
  }

  /**
   * Gets the value of the policySetId property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getPolicySetId() {
    return policySetId;
  }

  /**
   * Sets the value of the policySetId property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  protected void setPolicySetId(String value) {
    this.policySetId = value;
  }

  /**
   * Gets the value of the version property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getVersion() {
    return version;
  }

  /**
   * Sets the value of the version property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  protected void setVersion(String value) {
    this.version = value;
  }

  /**
   * Gets the value of the policyCombiningAlgId property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getPolicyCombiningAlgId() {
    return policyCombiningAlgId;
  }

  /**
   * Sets the value of the policyCombiningAlgId property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  protected void setPolicyCombiningAlgId(String value) {
    this.policyCombiningAlgId = value;
  }

  /**
   * Gets the value of the maxDelegationDepth property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getMaxDelegationDepth() {
    return maxDelegationDepth;
  }

  /**
   * Sets the value of the maxDelegationDepth property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  protected void setMaxDelegationDepth(BigInteger value) {
    this.maxDelegationDepth = value;
  }

  public static PolicySetType.Builder<Void> builder() {
    return new PolicySetType.Builder<Void>(null, null, false);
  }

  public static PolicySetType.Builder<Void> copyOf(final PolicySetType other) {
    return new PolicySetType.Builder<Void>(null, other, true);
  }

  public static PolicySetType.Builder<Void> copyOf(final PolicySetType other,
      final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
    return new PolicySetType.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
  }

  public static PolicySetType.Builder<Void> copyExcept(final PolicySetType other,
      final PropertyTree propertyTree) {
    return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
  }

  public static PolicySetType.Builder<Void> copyOnly(final PolicySetType other,
      final PropertyTree propertyTree) {
    return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
  }

  @Override
  public String toString() {
    return (((((((((((((((((((((((((((((((("(description = " + description) + "), ") + "(policyIssuer = ") + policyIssuer) + "), ") + "(policySetDefaults = ") + policySetDefaults) + "), ") + "(target = ") + target) + "), ") + "(policySetOrPolicyOrPolicySetIdReference = ") + policySetOrPolicyOrPolicySetIdReference) + "), ") + "(obligationExpressions = ") + obligationExpressions) + "), ") + "(adviceExpressions = ") + adviceExpressions) + "), ") + "(policySetId = ") + policySetId) + "), ") + "(version = ") + version) + "), ") + "(policyCombiningAlgId = ") + policyCombiningAlgId) + "), ") + "(maxDelegationDepth = ") + maxDelegationDepth) + ") ");
  }

  @Override
  public PolicySetType clone() throws CloneNotSupportedException {
    final PolicySetType newObject = ((PolicySetType) super.clone());
    newObject.policyIssuer = ((this.policyIssuer == null) ? null : this.policyIssuer.clone());
    newObject.policySetDefaults =
        ((this.policySetDefaults == null) ? null : this.policySetDefaults.clone());
    newObject.target = ((this.target == null) ? null : this.target.clone());
    newObject.policySetOrPolicyOrPolicySetIdReference =
        ((this.policySetOrPolicyOrPolicySetIdReference == null) ? null
            : new ArrayList<JAXBElement<?>>(this.policySetOrPolicyOrPolicySetIdReference));
    newObject.policySetOrPolicyOrPolicySetIdReference_RO =
        ((policySetOrPolicyOrPolicySetIdReference == null) ? null : Collections
            .unmodifiableList(newObject.policySetOrPolicyOrPolicySetIdReference));
    newObject.obligationExpressions =
        ((this.obligationExpressions == null) ? null : this.obligationExpressions.clone());
    newObject.adviceExpressions =
        ((this.adviceExpressions == null) ? null : this.adviceExpressions.clone());
    return newObject;
  }

  public List<JAXBElement<?>> getPolicySetOrPolicyOrPolicySetIdReference() {
    if (this.policySetOrPolicyOrPolicySetIdReference == null) {
      this.policySetOrPolicyOrPolicySetIdReference = new ArrayList<JAXBElement<?>>();
    }
    if (this.policySetOrPolicyOrPolicySetIdReference_RO == null) {
      this.policySetOrPolicyOrPolicySetIdReference_RO =
          ((policySetOrPolicyOrPolicySetIdReference == null) ? null : Collections
              .unmodifiableList(this.policySetOrPolicyOrPolicySetIdReference));
    }
    return this.policySetOrPolicyOrPolicySetIdReference_RO;
  }

  public static class Builder<TParentBuilder> {

    protected final TParentBuilder _parentBuilder;
    protected final PolicySetType _product;
    private String description;
    private PolicyIssuerType.Builder<PolicySetType.Builder<TParentBuilder>> policyIssuer;
    private DefaultsType.Builder<PolicySetType.Builder<TParentBuilder>> policySetDefaults;
    private TargetType.Builder<PolicySetType.Builder<TParentBuilder>> target;
    private List<JAXBElement<?>> policySetOrPolicyOrPolicySetIdReference;
    private ObligationExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>> obligationExpressions;
    private AdviceExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>> adviceExpressions;
    private String policySetId;
    private String version;
    private String policyCombiningAlgId;
    private BigInteger maxDelegationDepth;

    public Builder(final TParentBuilder parentBuilder, final PolicySetType other, final boolean copy) {
      this._parentBuilder = parentBuilder;
      if (copy) {
        this._product = null;
        this.description = other.description;
        this.policyIssuer =
            ((other.policyIssuer == null) ? null
                : new PolicyIssuerType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                    other.policyIssuer, true));
        this.policySetDefaults =
            ((other.policySetDefaults == null) ? null
                : new DefaultsType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                    other.policySetDefaults, true));
        this.target =
            ((other.target == null) ? null
                : new TargetType.Builder<PolicySetType.Builder<TParentBuilder>>(this, other.target,
                    true));
        this.policySetOrPolicyOrPolicySetIdReference =
            ((other.policySetOrPolicyOrPolicySetIdReference == null) ? null
                : new ArrayList<JAXBElement<?>>(other.policySetOrPolicyOrPolicySetIdReference));
        this.obligationExpressions =
            ((other.obligationExpressions == null) ? null
                : new ObligationExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>>(
                    this, other.obligationExpressions, true));
        this.adviceExpressions =
            ((other.adviceExpressions == null) ? null
                : new AdviceExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                    other.adviceExpressions, true));
        this.policySetId = other.policySetId;
        this.version = other.version;
        this.policyCombiningAlgId = other.policyCombiningAlgId;
        this.maxDelegationDepth = other.maxDelegationDepth;
      } else {
        this._product = other;
      }
    }

    public Builder(final TParentBuilder parentBuilder, final PolicySetType other,
        final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
      this._parentBuilder = parentBuilder;
      if (copy) {
        this._product = null;
        final PropertyTree descriptionPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("description"));
        if (((treeUse == PropertyTreeUse.INCLUDE) ? (descriptionPropertyTree != null)
            : ((descriptionPropertyTree == null) || (!descriptionPropertyTree.isLeaf())))) {
          this.description = other.description;
        }
        final PropertyTree policyIssuerPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("policyIssuer"));
        if (((treeUse == PropertyTreeUse.INCLUDE) ? (policyIssuerPropertyTree != null)
            : ((policyIssuerPropertyTree == null) || (!policyIssuerPropertyTree.isLeaf())))) {
          this.policyIssuer =
              ((other.policyIssuer == null) ? null
                  : new PolicyIssuerType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                      other.policyIssuer, true, policyIssuerPropertyTree, treeUse));
        }
        final PropertyTree policySetDefaultsPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("policySetDefaults"));
        if (((treeUse == PropertyTreeUse.INCLUDE)
            ? (policySetDefaultsPropertyTree != null)
            : ((policySetDefaultsPropertyTree == null) || (!policySetDefaultsPropertyTree.isLeaf())))) {
          this.policySetDefaults =
              ((other.policySetDefaults == null) ? null
                  : new DefaultsType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                      other.policySetDefaults, true, policySetDefaultsPropertyTree, treeUse));
        }
        final PropertyTree targetPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("target"));
        if (((treeUse == PropertyTreeUse.INCLUDE) ? (targetPropertyTree != null)
            : ((targetPropertyTree == null) || (!targetPropertyTree.isLeaf())))) {
          this.target =
              ((other.target == null) ? null
                  : new TargetType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                      other.target, true, targetPropertyTree, treeUse));
        }
        final PropertyTree policySetOrPolicyOrPolicySetIdReferencePropertyTree =
            ((propertyTree == null) ? null : propertyTree
                .get("policySetOrPolicyOrPolicySetIdReference"));
        if (((treeUse == PropertyTreeUse.INCLUDE)
            ? (policySetOrPolicyOrPolicySetIdReferencePropertyTree != null)
            : ((policySetOrPolicyOrPolicySetIdReferencePropertyTree == null) || (!policySetOrPolicyOrPolicySetIdReferencePropertyTree
                .isLeaf())))) {
          this.policySetOrPolicyOrPolicySetIdReference =
              ((other.policySetOrPolicyOrPolicySetIdReference == null) ? null
                  : new ArrayList<JAXBElement<?>>(other.policySetOrPolicyOrPolicySetIdReference));
        }
        final PropertyTree obligationExpressionsPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("obligationExpressions"));
        if (((treeUse == PropertyTreeUse.INCLUDE) ? (obligationExpressionsPropertyTree != null)
            : ((obligationExpressionsPropertyTree == null) || (!obligationExpressionsPropertyTree
                .isLeaf())))) {
          this.obligationExpressions =
              ((other.obligationExpressions == null) ? null
                  : new ObligationExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>>(
                      this, other.obligationExpressions, true, obligationExpressionsPropertyTree,
                      treeUse));
        }
        final PropertyTree adviceExpressionsPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("adviceExpressions"));
        if (((treeUse == PropertyTreeUse.INCLUDE)
            ? (adviceExpressionsPropertyTree != null)
            : ((adviceExpressionsPropertyTree == null) || (!adviceExpressionsPropertyTree.isLeaf())))) {
          this.adviceExpressions =
              ((other.adviceExpressions == null) ? null
                  : new AdviceExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                      other.adviceExpressions, true, adviceExpressionsPropertyTree, treeUse));
        }
        final PropertyTree policySetIdPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("policySetId"));
        if (((treeUse == PropertyTreeUse.INCLUDE) ? (policySetIdPropertyTree != null)
            : ((policySetIdPropertyTree == null) || (!policySetIdPropertyTree.isLeaf())))) {
          this.policySetId = other.policySetId;
        }
        final PropertyTree versionPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("version"));
        if (((treeUse == PropertyTreeUse.INCLUDE) ? (versionPropertyTree != null)
            : ((versionPropertyTree == null) || (!versionPropertyTree.isLeaf())))) {
          this.version = other.version;
        }
        final PropertyTree policyCombiningAlgIdPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("policyCombiningAlgId"));
        if (((treeUse == PropertyTreeUse.INCLUDE) ? (policyCombiningAlgIdPropertyTree != null)
            : ((policyCombiningAlgIdPropertyTree == null) || (!policyCombiningAlgIdPropertyTree
                .isLeaf())))) {
          this.policyCombiningAlgId = other.policyCombiningAlgId;
        }
        final PropertyTree maxDelegationDepthPropertyTree =
            ((propertyTree == null) ? null : propertyTree.get("maxDelegationDepth"));
        if (((treeUse == PropertyTreeUse.INCLUDE) ? (maxDelegationDepthPropertyTree != null)
            : ((maxDelegationDepthPropertyTree == null) || (!maxDelegationDepthPropertyTree
                .isLeaf())))) {
          this.maxDelegationDepth = other.maxDelegationDepth;
        }
      } else {
        this._product = other;
      }
    }

    public TParentBuilder end() {
      return this._parentBuilder;
    }

    protected <P extends PolicySetType> P init(final P product) {
      product.description = this.description;
      product.policyIssuer = ((this.policyIssuer == null) ? null : this.policyIssuer.build());
      product.policySetDefaults =
          ((this.policySetDefaults == null) ? null : this.policySetDefaults.build());
      product.target = ((this.target == null) ? null : this.target.build());
      product.policySetOrPolicyOrPolicySetIdReference =
          this.policySetOrPolicyOrPolicySetIdReference;
      product.policySetOrPolicyOrPolicySetIdReference_RO =
          ((policySetOrPolicyOrPolicySetIdReference == null) ? null : Collections
              .unmodifiableList(product.policySetOrPolicyOrPolicySetIdReference));
      product.obligationExpressions =
          ((this.obligationExpressions == null) ? null : this.obligationExpressions.build());
      product.adviceExpressions =
          ((this.adviceExpressions == null) ? null : this.adviceExpressions.build());
      product.policySetId = this.policySetId;
      product.version = this.version;
      product.policyCombiningAlgId = this.policyCombiningAlgId;
      product.maxDelegationDepth = this.maxDelegationDepth;
      return product;
    }

    public PolicySetType.Builder<TParentBuilder> withDescription(final String description) {
      this.description = description;
      return this;
    }

    public PolicySetType.Builder<TParentBuilder> withPolicyIssuer(
        final PolicyIssuerType policyIssuer) {
      this.policyIssuer =
          ((policyIssuer == null) ? null
              : new PolicyIssuerType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                  policyIssuer, false));
      return this;
    }

    public PolicyIssuerType.Builder<? extends PolicySetType.Builder<TParentBuilder>> withPolicyIssuer() {
      return this.policyIssuer =
          new PolicyIssuerType.Builder<PolicySetType.Builder<TParentBuilder>>(this, null, false);
    }

    public PolicySetType.Builder<TParentBuilder> withPolicySetDefaults(
        final DefaultsType policySetDefaults) {
      this.policySetDefaults =
          ((policySetDefaults == null) ? null
              : new DefaultsType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                  policySetDefaults, false));
      return this;
    }

    public DefaultsType.Builder<? extends PolicySetType.Builder<TParentBuilder>> withPolicySetDefaults() {
      return this.policySetDefaults =
          new DefaultsType.Builder<PolicySetType.Builder<TParentBuilder>>(this, null, false);
    }

    public PolicySetType.Builder<TParentBuilder> withTarget(final TargetType target) {
      this.target =
          ((target == null) ? null : new TargetType.Builder<PolicySetType.Builder<TParentBuilder>>(
              this, target, false));
      return this;
    }

    public TargetType.Builder<? extends PolicySetType.Builder<TParentBuilder>> withTarget() {
      return this.target =
          new TargetType.Builder<PolicySetType.Builder<TParentBuilder>>(this, null, false);
    }

    public PolicySetType.Builder<TParentBuilder> addPolicySetOrPolicyOrPolicySetIdReference(
        final List<? extends JAXBElement<?>> policySetOrPolicyOrPolicySetIdReference) {
      if (this.policySetOrPolicyOrPolicySetIdReference == null) {
        this.policySetOrPolicyOrPolicySetIdReference = new ArrayList<JAXBElement<?>>();
      }
      this.policySetOrPolicyOrPolicySetIdReference.addAll(policySetOrPolicyOrPolicySetIdReference);
      return this;
    }

    public PolicySetType.Builder<TParentBuilder> withPolicySetOrPolicyOrPolicySetIdReference(
        final List<? extends JAXBElement<?>> policySetOrPolicyOrPolicySetIdReference) {
      if (this.policySetOrPolicyOrPolicySetIdReference != null) {
        this.policySetOrPolicyOrPolicySetIdReference.clear();
      }
      return addPolicySetOrPolicyOrPolicySetIdReference(policySetOrPolicyOrPolicySetIdReference);
    }

    public PolicySetType.Builder<TParentBuilder> addPolicySetOrPolicyOrPolicySetIdReference(
        JAXBElement<?>... policySetOrPolicyOrPolicySetIdReference) {
      addPolicySetOrPolicyOrPolicySetIdReference(Arrays
          .asList(policySetOrPolicyOrPolicySetIdReference));
      return this;
    }

    public PolicySetType.Builder<TParentBuilder> withPolicySetOrPolicyOrPolicySetIdReference(
        JAXBElement<?>... policySetOrPolicyOrPolicySetIdReference) {
      withPolicySetOrPolicyOrPolicySetIdReference(Arrays
          .asList(policySetOrPolicyOrPolicySetIdReference));
      return this;
    }

    public PolicySetType.Builder<TParentBuilder> withObligationExpressions(
        final ObligationExpressionsType obligationExpressions) {
      this.obligationExpressions =
          ((obligationExpressions == null) ? null
              : new ObligationExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                  obligationExpressions, false));
      return this;
    }

    public ObligationExpressionsType.Builder<? extends PolicySetType.Builder<TParentBuilder>> withObligationExpressions() {
      return this.obligationExpressions =
          new ObligationExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>>(this, null,
              false);
    }

    public PolicySetType.Builder<TParentBuilder> withAdviceExpressions(
        final AdviceExpressionsType adviceExpressions) {
      this.adviceExpressions =
          ((adviceExpressions == null) ? null
              : new AdviceExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>>(this,
                  adviceExpressions, false));
      return this;
    }

    public AdviceExpressionsType.Builder<? extends PolicySetType.Builder<TParentBuilder>> withAdviceExpressions() {
      return this.adviceExpressions =
          new AdviceExpressionsType.Builder<PolicySetType.Builder<TParentBuilder>>(this, null,
              false);
    }

    public PolicySetType.Builder<TParentBuilder> withPolicySetId(final String policySetId) {
      this.policySetId = policySetId;
      return this;
    }

    public PolicySetType.Builder<TParentBuilder> withVersion(final String version) {
      this.version = version;
      return this;
    }

    public PolicySetType.Builder<TParentBuilder> withPolicyCombiningAlgId(
        final String policyCombiningAlgId) {
      this.policyCombiningAlgId = policyCombiningAlgId;
      return this;
    }

    public PolicySetType.Builder<TParentBuilder> withMaxDelegationDepth(
        final BigInteger maxDelegationDepth) {
      this.maxDelegationDepth = maxDelegationDepth;
      return this;
    }

    public PolicySetType build() {
      if (this._product == null) {
        return this.init(new PolicySetType());
      } else {
        return ((PolicySetType) this._product);
      }
    }

  }

  public static class Select extends PolicySetType.Selector<PolicySetType.Select, Void> {

    Select() {
      super(null, null, null);
    }

    public static PolicySetType.Select _root() {
      return new PolicySetType.Select();
    }

  }

  public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?>, TParent>
      extends com.kscs.util.jaxb.Selector<TRoot, TParent> {

    private com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> description =
        null;
    private PolicyIssuerType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policyIssuer =
        null;
    private DefaultsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policySetDefaults =
        null;
    private TargetType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> target = null;
    private com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policySetOrPolicyOrPolicySetIdReference =
        null;
    private ObligationExpressionsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> obligationExpressions =
        null;
    private AdviceExpressionsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> adviceExpressions =
        null;
    private com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policySetId =
        null;
    private com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> version =
        null;
    private com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policyCombiningAlgId =
        null;
    private com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> maxDelegationDepth =
        null;

    public Selector(final TRoot root, final TParent parent, final String propertyName) {
      super(root, parent, propertyName);
    }

    @Override
    public Map<String, PropertyTree> buildChildren() {
      final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
      products.putAll(super.buildChildren());
      if (this.description != null) {
        products.put("description", this.description.init());
      }
      if (this.policyIssuer != null) {
        products.put("policyIssuer", this.policyIssuer.init());
      }
      if (this.policySetDefaults != null) {
        products.put("policySetDefaults", this.policySetDefaults.init());
      }
      if (this.target != null) {
        products.put("target", this.target.init());
      }
      if (this.policySetOrPolicyOrPolicySetIdReference != null) {
        products.put("policySetOrPolicyOrPolicySetIdReference",
            this.policySetOrPolicyOrPolicySetIdReference.init());
      }
      if (this.obligationExpressions != null) {
        products.put("obligationExpressions", this.obligationExpressions.init());
      }
      if (this.adviceExpressions != null) {
        products.put("adviceExpressions", this.adviceExpressions.init());
      }
      if (this.policySetId != null) {
        products.put("policySetId", this.policySetId.init());
      }
      if (this.version != null) {
        products.put("version", this.version.init());
      }
      if (this.policyCombiningAlgId != null) {
        products.put("policyCombiningAlgId", this.policyCombiningAlgId.init());
      }
      if (this.maxDelegationDepth != null) {
        products.put("maxDelegationDepth", this.maxDelegationDepth.init());
      }
      return products;
    }

    public com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> description() {
      return ((this.description == null) ? this.description =
          new com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(
              this._root, this, "description") : this.description);
    }

    public PolicyIssuerType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policyIssuer() {
      return ((this.policyIssuer == null) ? this.policyIssuer =
          new PolicyIssuerType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(this._root,
              this, "policyIssuer") : this.policyIssuer);
    }

    public DefaultsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policySetDefaults() {
      return ((this.policySetDefaults == null) ? this.policySetDefaults =
          new DefaultsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(this._root,
              this, "policySetDefaults") : this.policySetDefaults);
    }

    public TargetType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> target() {
      return ((this.target == null) ? this.target =
          new TargetType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(this._root, this,
              "target") : this.target);
    }

    public com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policySetOrPolicyOrPolicySetIdReference() {
      return ((this.policySetOrPolicyOrPolicySetIdReference == null)
          ? this.policySetOrPolicyOrPolicySetIdReference =
              new com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(
                  this._root, this, "policySetOrPolicyOrPolicySetIdReference")
          : this.policySetOrPolicyOrPolicySetIdReference);
    }

    public ObligationExpressionsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> obligationExpressions() {
      return ((this.obligationExpressions == null) ? this.obligationExpressions =
          new ObligationExpressionsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(
              this._root, this, "obligationExpressions") : this.obligationExpressions);
    }

    public AdviceExpressionsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> adviceExpressions() {
      return ((this.adviceExpressions == null) ? this.adviceExpressions =
          new AdviceExpressionsType.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(
              this._root, this, "adviceExpressions") : this.adviceExpressions);
    }

    public com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policySetId() {
      return ((this.policySetId == null) ? this.policySetId =
          new com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(
              this._root, this, "policySetId") : this.policySetId);
    }

    public com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> version() {
      return ((this.version == null) ? this.version =
          new com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(
              this._root, this, "version") : this.version);
    }

    public com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> policyCombiningAlgId() {
      return ((this.policyCombiningAlgId == null) ? this.policyCombiningAlgId =
          new com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(
              this._root, this, "policyCombiningAlgId") : this.policyCombiningAlgId);
    }

    public com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>> maxDelegationDepth() {
      return ((this.maxDelegationDepth == null) ? this.maxDelegationDepth =
          new com.kscs.util.jaxb.Selector<TRoot, PolicySetType.Selector<TRoot, TParent>>(
              this._root, this, "maxDelegationDepth") : this.maxDelegationDepth);
    }

  }

}
