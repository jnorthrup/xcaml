//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.01.28 at 12:18:04 PM PST
//

package oasis.names.tc.xacml._3_0.core.schema.wd_17;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;

/**
 * <p>
 * Java class for PolicyIdentifierListType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PolicyIdentifierListType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *         &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicyIdReference"/&gt;
 *         &lt;element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicySetIdReference"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PolicyIdentifierListType", propOrder = {"policyIdReferenceOrPolicySetIdReference"})
public class PolicyIdentifierListType implements Cloneable {

  @XmlElementRefs({
      @XmlElementRef(name = "PolicyIdReference", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PolicySetIdReference", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", type = JAXBElement.class, required = false)})
  protected List<JAXBElement<IdReferenceType>> policyIdReferenceOrPolicySetIdReference;
  protected transient List<JAXBElement<IdReferenceType>> policyIdReferenceOrPolicySetIdReference_RO =
      null;

  public static PolicyIdentifierListType.Builder<Void> builder() {
    return new PolicyIdentifierListType.Builder<Void>(null, null, false);
  }

  public static PolicyIdentifierListType.Builder<Void> copyOf(final PolicyIdentifierListType other) {
    return new PolicyIdentifierListType.Builder<Void>(null, other, true);
  }

  public static PolicyIdentifierListType.Builder<Void> copyOf(final PolicyIdentifierListType other,
      final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
    return new PolicyIdentifierListType.Builder<Void>(null, other, true, propertyTree,
        propertyTreeUse);
  }

  public static PolicyIdentifierListType.Builder<Void> copyExcept(
      final PolicyIdentifierListType other, final PropertyTree propertyTree) {
    return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
  }

  public static PolicyIdentifierListType.Builder<Void> copyOnly(
      final PolicyIdentifierListType other, final PropertyTree propertyTree) {
    return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
  }

  @Override
  public String toString() {
    return (("(policyIdReferenceOrPolicySetIdReference = " + policyIdReferenceOrPolicySetIdReference) + ") ");
  }

  @Override
  public PolicyIdentifierListType clone() throws CloneNotSupportedException {
    final PolicyIdentifierListType newObject = ((PolicyIdentifierListType) super.clone());
    newObject.policyIdReferenceOrPolicySetIdReference =
        ((this.policyIdReferenceOrPolicySetIdReference == null) ? null
            : new ArrayList<JAXBElement<IdReferenceType>>(
                this.policyIdReferenceOrPolicySetIdReference));
    newObject.policyIdReferenceOrPolicySetIdReference_RO =
        ((policyIdReferenceOrPolicySetIdReference == null) ? null : Collections
            .unmodifiableList(newObject.policyIdReferenceOrPolicySetIdReference));
    return newObject;
  }

  public List<JAXBElement<IdReferenceType>> getPolicyIdReferenceOrPolicySetIdReference() {
    if (this.policyIdReferenceOrPolicySetIdReference == null) {
      this.policyIdReferenceOrPolicySetIdReference = new ArrayList<JAXBElement<IdReferenceType>>();
    }
    if (this.policyIdReferenceOrPolicySetIdReference_RO == null) {
      this.policyIdReferenceOrPolicySetIdReference_RO =
          ((policyIdReferenceOrPolicySetIdReference == null) ? null : Collections
              .unmodifiableList(this.policyIdReferenceOrPolicySetIdReference));
    }
    return this.policyIdReferenceOrPolicySetIdReference_RO;
  }

  public static class Builder<TParentBuilder> {

    protected final TParentBuilder _parentBuilder;
    protected final PolicyIdentifierListType _product;
    private List<JAXBElement<IdReferenceType>> policyIdReferenceOrPolicySetIdReference;

    public Builder(final TParentBuilder parentBuilder, final PolicyIdentifierListType other,
        final boolean copy) {
      this._parentBuilder = parentBuilder;
      if (copy) {
        this._product = null;
        this.policyIdReferenceOrPolicySetIdReference =
            ((other.policyIdReferenceOrPolicySetIdReference == null) ? null
                : new ArrayList<JAXBElement<IdReferenceType>>(
                    other.policyIdReferenceOrPolicySetIdReference));
      } else {
        this._product = other;
      }
    }

    public Builder(final TParentBuilder parentBuilder, final PolicyIdentifierListType other,
        final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
      this._parentBuilder = parentBuilder;
      if (copy) {
        this._product = null;
        final PropertyTree policyIdReferenceOrPolicySetIdReferencePropertyTree =
            ((propertyTree == null) ? null : propertyTree
                .get("policyIdReferenceOrPolicySetIdReference"));
        if (((treeUse == PropertyTreeUse.INCLUDE)
            ? (policyIdReferenceOrPolicySetIdReferencePropertyTree != null)
            : ((policyIdReferenceOrPolicySetIdReferencePropertyTree == null) || (!policyIdReferenceOrPolicySetIdReferencePropertyTree
                .isLeaf())))) {
          this.policyIdReferenceOrPolicySetIdReference =
              ((other.policyIdReferenceOrPolicySetIdReference == null) ? null
                  : new ArrayList<JAXBElement<IdReferenceType>>(
                      other.policyIdReferenceOrPolicySetIdReference));
        }
      } else {
        this._product = other;
      }
    }

    public TParentBuilder end() {
      return this._parentBuilder;
    }

    protected <P extends PolicyIdentifierListType> P init(final P product) {
      product.policyIdReferenceOrPolicySetIdReference =
          this.policyIdReferenceOrPolicySetIdReference;
      product.policyIdReferenceOrPolicySetIdReference_RO =
          ((policyIdReferenceOrPolicySetIdReference == null) ? null : Collections
              .unmodifiableList(product.policyIdReferenceOrPolicySetIdReference));
      return product;
    }

    public PolicyIdentifierListType.Builder<TParentBuilder> addPolicyIdReferenceOrPolicySetIdReference(
        final List<? extends JAXBElement<IdReferenceType>> policyIdReferenceOrPolicySetIdReference) {
      if (this.policyIdReferenceOrPolicySetIdReference == null) {
        this.policyIdReferenceOrPolicySetIdReference =
            new ArrayList<JAXBElement<IdReferenceType>>();
      }
      this.policyIdReferenceOrPolicySetIdReference.addAll(policyIdReferenceOrPolicySetIdReference);
      return this;
    }

    public PolicyIdentifierListType.Builder<TParentBuilder> withPolicyIdReferenceOrPolicySetIdReference(
        final List<? extends JAXBElement<IdReferenceType>> policyIdReferenceOrPolicySetIdReference) {
      if (this.policyIdReferenceOrPolicySetIdReference != null) {
        this.policyIdReferenceOrPolicySetIdReference.clear();
      }
      return addPolicyIdReferenceOrPolicySetIdReference(policyIdReferenceOrPolicySetIdReference);
    }

    public PolicyIdentifierListType.Builder<TParentBuilder> addPolicyIdReferenceOrPolicySetIdReference(
        JAXBElement<IdReferenceType>... policyIdReferenceOrPolicySetIdReference) {
      addPolicyIdReferenceOrPolicySetIdReference(Arrays
          .asList(policyIdReferenceOrPolicySetIdReference));
      return this;
    }

    public PolicyIdentifierListType.Builder<TParentBuilder> withPolicyIdReferenceOrPolicySetIdReference(
        JAXBElement<IdReferenceType>... policyIdReferenceOrPolicySetIdReference) {
      withPolicyIdReferenceOrPolicySetIdReference(Arrays
          .asList(policyIdReferenceOrPolicySetIdReference));
      return this;
    }

    public PolicyIdentifierListType build() {
      if (this._product == null) {
        return this.init(new PolicyIdentifierListType());
      } else {
        return ((PolicyIdentifierListType) this._product);
      }
    }

  }

  public static class Select extends
      PolicyIdentifierListType.Selector<PolicyIdentifierListType.Select, Void> {

    Select() {
      super(null, null, null);
    }

    public static PolicyIdentifierListType.Select _root() {
      return new PolicyIdentifierListType.Select();
    }

  }

  public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?>, TParent>
      extends com.kscs.util.jaxb.Selector<TRoot, TParent> {

    private com.kscs.util.jaxb.Selector<TRoot, PolicyIdentifierListType.Selector<TRoot, TParent>> policyIdReferenceOrPolicySetIdReference =
        null;

    public Selector(final TRoot root, final TParent parent, final String propertyName) {
      super(root, parent, propertyName);
    }

    @Override
    public Map<String, PropertyTree> buildChildren() {
      final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
      products.putAll(super.buildChildren());
      if (this.policyIdReferenceOrPolicySetIdReference != null) {
        products.put("policyIdReferenceOrPolicySetIdReference",
            this.policyIdReferenceOrPolicySetIdReference.init());
      }
      return products;
    }

    public com.kscs.util.jaxb.Selector<TRoot, PolicyIdentifierListType.Selector<TRoot, TParent>> policyIdReferenceOrPolicySetIdReference() {
      return ((this.policyIdReferenceOrPolicySetIdReference == null)
          ? this.policyIdReferenceOrPolicySetIdReference =
              new com.kscs.util.jaxb.Selector<TRoot, PolicyIdentifierListType.Selector<TRoot, TParent>>(
                  this._root, this, "policyIdReferenceOrPolicySetIdReference")
          : this.policyIdReferenceOrPolicySetIdReference);
    }

  }

}
