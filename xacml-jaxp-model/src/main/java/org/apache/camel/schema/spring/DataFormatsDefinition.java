//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.24 at 01:59:12 PM PST
//

package org.apache.camel.schema.spring;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * <p>
 * Java class for dataFormatsDefinition complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="dataFormatsDefinition">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{http://camel.apache.org/schema/spring}avro"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}barcode"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}base64"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}beanio"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}bindy"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}castor"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}crypto"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}csv"/>
 *           &lt;element name="custom" type="{http://camel.apache.org/schema/spring}customDataFormat"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}flatpack"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}gzip"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}hl7"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}jaxb"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}jibx"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}json"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}protobuf"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}rss"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}secureXML"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}serialization"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}soapjaxb"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}string"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}syslog"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}tidyMarkup"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}xmlBeans"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}xmljson"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}xmlrpc"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}xstream"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}pgp"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}zip"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}zipFile"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "dataFormatsDefinition", propOrder = {"avroOrBarcodeOrBase64"})
public class DataFormatsDefinition {

  @XmlElements({
      @XmlElement(name = "avro", type = AvroDataFormat.class),
      @XmlElement(name = "barcode", type = BarcodeDataFormat.class),
      @XmlElement(name = "base64", type = Base64DataFormat.class),
      @XmlElement(name = "beanio", type = BeanioDataFormat.class),
      @XmlElement(name = "bindy", type = BindyDataFormat.class),
      @XmlElement(name = "castor", type = CastorDataFormat.class),
      @XmlElement(name = "crypto", type = CryptoDataFormat.class),
      @XmlElement(name = "csv", type = CsvDataFormat.class),
      @XmlElement(name = "custom", type = CustomDataFormat.class),
      @XmlElement(name = "flatpack", type = FlatpackDataFormat.class),
      @XmlElement(name = "gzip", type = GzipDataFormat.class),
      @XmlElement(name = "hl7", type = Hl7DataFormat.class),
      @XmlElement(name = "jaxb", type = JaxbDataFormat.class),
      @XmlElement(name = "jibx", type = JibxDataFormat.class),
      @XmlElement(name = "json", type = JsonDataFormat.class),
      @XmlElement(name = "protobuf", type = ProtobufDataFormat.class),
      @XmlElement(name = "rss", type = RssDataFormat.class),
      @XmlElement(name = "secureXML", type = XmlSecurityDataFormat.class),
      @XmlElement(name = "serialization", type = SerializationDataFormat.class),
      @XmlElement(name = "soapjaxb", type = SoapJaxbDataFormat.class),
      @XmlElement(name = "string", type = StringDataFormat.class),
      @XmlElement(name = "syslog", type = SyslogDataFormat.class),
      @XmlElement(name = "tidyMarkup", type = TidyMarkupDataFormat.class),
      @XmlElement(name = "xmlBeans", type = XmlBeansDataFormat.class),
      @XmlElement(name = "xmljson", type = XmlJsonDataFormat.class),
      @XmlElement(name = "xmlrpc", type = XmlRpcDataFormat.class),
      @XmlElement(name = "xstream", type = XStreamDataFormat.class),
      @XmlElement(name = "pgp", type = PgpDataFormat.class),
      @XmlElement(name = "zip", type = ZipDataFormat.class),
      @XmlElement(name = "zipFile", type = ZipFileDataFormat.class)})
  protected List<DataFormat> avroOrBarcodeOrBase64;

  /**
   * Gets the value of the avroOrBarcodeOrBase64 property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the avroOrBarcodeOrBase64 property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getAvroOrBarcodeOrBase64().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link AvroDataFormat } {@link BarcodeDataFormat }
   * {@link Base64DataFormat } {@link BeanioDataFormat } {@link BindyDataFormat } {@link CastorDataFormat }
   * {@link CryptoDataFormat } {@link CsvDataFormat } {@link CustomDataFormat } {@link FlatpackDataFormat }
   * {@link GzipDataFormat } {@link Hl7DataFormat } {@link JaxbDataFormat } {@link JibxDataFormat } {@link JsonDataFormat }
   * {@link ProtobufDataFormat } {@link RssDataFormat } {@link XmlSecurityDataFormat } {@link SerializationDataFormat }
   * {@link SoapJaxbDataFormat } {@link StringDataFormat } {@link SyslogDataFormat } {@link TidyMarkupDataFormat }
   * {@link XmlBeansDataFormat } {@link XmlJsonDataFormat } {@link XmlRpcDataFormat } {@link XStreamDataFormat }
   * {@link PgpDataFormat } {@link ZipDataFormat } {@link ZipFileDataFormat }
   * 
   * 
   */
  public List<DataFormat> getAvroOrBarcodeOrBase64() {
    if (avroOrBarcodeOrBase64 == null) {
      avroOrBarcodeOrBase64 = new ArrayList<DataFormat>();
    }
    return this.avroOrBarcodeOrBase64;
  }

  public DataFormatsDefinition withAvroOrBarcodeOrBase64(DataFormat... values) {
    if (values != null) {
      for (DataFormat value : values) {
        getAvroOrBarcodeOrBase64().add(value);
      }
    }
    return this;
  }

  public DataFormatsDefinition withAvroOrBarcodeOrBase64(Collection<DataFormat> values) {
    if (values != null) {
      getAvroOrBarcodeOrBase64().addAll(values);
    }
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
