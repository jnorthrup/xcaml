//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.03.04 at 01:11:38 AM PST
//

package org.apache.camel.schema.spring;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * <p>
 * Java class for xmlJsonDataFormat complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="xmlJsonDataFormat">
 *   &lt;complexContent>
 *     &lt;extension base="{http://camel.apache.org/schema/spring}dataFormat">
 *       &lt;sequence>
 *       &lt;/sequence>
 *       &lt;attribute name="encoding" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="elementName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="arrayName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="forceTopLevelObject" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="namespaceLenient" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="rootName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="skipWhitespace" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="trimSpaces" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="skipNamespaces" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="removeNamespacePrefixes" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="expandableProperties">
 *         &lt;simpleType>
 *           &lt;list itemType="{http://www.w3.org/2001/XMLSchema}string" />
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="typeHints" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "xmlJsonDataFormat")
public class XmlJsonDataFormat extends DataFormat {

  @XmlAttribute(name = "encoding")
  protected String encoding;
  @XmlAttribute(name = "elementName")
  protected String elementName;
  @XmlAttribute(name = "arrayName")
  protected String arrayName;
  @XmlAttribute(name = "forceTopLevelObject")
  protected Boolean forceTopLevelObject;
  @XmlAttribute(name = "namespaceLenient")
  protected Boolean namespaceLenient;
  @XmlAttribute(name = "rootName")
  protected String rootName;
  @XmlAttribute(name = "skipWhitespace")
  protected Boolean skipWhitespace;
  @XmlAttribute(name = "trimSpaces")
  protected Boolean trimSpaces;
  @XmlAttribute(name = "skipNamespaces")
  protected Boolean skipNamespaces;
  @XmlAttribute(name = "removeNamespacePrefixes")
  protected Boolean removeNamespacePrefixes;
  @XmlAttribute(name = "expandableProperties")
  protected List<String> expandableProperties;
  @XmlAttribute(name = "typeHints")
  protected String typeHints;

  /**
   * Gets the value of the encoding property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getEncoding() {
    return encoding;
  }

  /**
   * Sets the value of the encoding property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setEncoding(String value) {
    this.encoding = value;
  }

  /**
   * Gets the value of the elementName property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getElementName() {
    return elementName;
  }

  /**
   * Sets the value of the elementName property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setElementName(String value) {
    this.elementName = value;
  }

  /**
   * Gets the value of the arrayName property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getArrayName() {
    return arrayName;
  }

  /**
   * Sets the value of the arrayName property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setArrayName(String value) {
    this.arrayName = value;
  }

  /**
   * Gets the value of the forceTopLevelObject property.
   * 
   * @return possible object is {@link Boolean }
   * 
   */
  public Boolean isForceTopLevelObject() {
    return forceTopLevelObject;
  }

  /**
   * Sets the value of the forceTopLevelObject property.
   * 
   * @param value allowed object is {@link Boolean }
   * 
   */
  public void setForceTopLevelObject(Boolean value) {
    this.forceTopLevelObject = value;
  }

  /**
   * Gets the value of the namespaceLenient property.
   * 
   * @return possible object is {@link Boolean }
   * 
   */
  public Boolean isNamespaceLenient() {
    return namespaceLenient;
  }

  /**
   * Sets the value of the namespaceLenient property.
   * 
   * @param value allowed object is {@link Boolean }
   * 
   */
  public void setNamespaceLenient(Boolean value) {
    this.namespaceLenient = value;
  }

  /**
   * Gets the value of the rootName property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getRootName() {
    return rootName;
  }

  /**
   * Sets the value of the rootName property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setRootName(String value) {
    this.rootName = value;
  }

  /**
   * Gets the value of the skipWhitespace property.
   * 
   * @return possible object is {@link Boolean }
   * 
   */
  public Boolean isSkipWhitespace() {
    return skipWhitespace;
  }

  /**
   * Sets the value of the skipWhitespace property.
   * 
   * @param value allowed object is {@link Boolean }
   * 
   */
  public void setSkipWhitespace(Boolean value) {
    this.skipWhitespace = value;
  }

  /**
   * Gets the value of the trimSpaces property.
   * 
   * @return possible object is {@link Boolean }
   * 
   */
  public Boolean isTrimSpaces() {
    return trimSpaces;
  }

  /**
   * Sets the value of the trimSpaces property.
   * 
   * @param value allowed object is {@link Boolean }
   * 
   */
  public void setTrimSpaces(Boolean value) {
    this.trimSpaces = value;
  }

  /**
   * Gets the value of the skipNamespaces property.
   * 
   * @return possible object is {@link Boolean }
   * 
   */
  public Boolean isSkipNamespaces() {
    return skipNamespaces;
  }

  /**
   * Sets the value of the skipNamespaces property.
   * 
   * @param value allowed object is {@link Boolean }
   * 
   */
  public void setSkipNamespaces(Boolean value) {
    this.skipNamespaces = value;
  }

  /**
   * Gets the value of the removeNamespacePrefixes property.
   * 
   * @return possible object is {@link Boolean }
   * 
   */
  public Boolean isRemoveNamespacePrefixes() {
    return removeNamespacePrefixes;
  }

  /**
   * Sets the value of the removeNamespacePrefixes property.
   * 
   * @param value allowed object is {@link Boolean }
   * 
   */
  public void setRemoveNamespacePrefixes(Boolean value) {
    this.removeNamespacePrefixes = value;
  }

  /**
   * Gets the value of the expandableProperties property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the expandableProperties property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getExpandableProperties().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link String }
   * 
   * 
   */
  public List<String> getExpandableProperties() {
    if (expandableProperties == null) {
      expandableProperties = new ArrayList<String>();
    }
    return this.expandableProperties;
  }

  /**
   * Gets the value of the typeHints property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getTypeHints() {
    return typeHints;
  }

  /**
   * Sets the value of the typeHints property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setTypeHints(String value) {
    this.typeHints = value;
  }

  public XmlJsonDataFormat withEncoding(String value) {
    setEncoding(value);
    return this;
  }

  public XmlJsonDataFormat withElementName(String value) {
    setElementName(value);
    return this;
  }

  public XmlJsonDataFormat withArrayName(String value) {
    setArrayName(value);
    return this;
  }

  public XmlJsonDataFormat withForceTopLevelObject(Boolean value) {
    setForceTopLevelObject(value);
    return this;
  }

  public XmlJsonDataFormat withNamespaceLenient(Boolean value) {
    setNamespaceLenient(value);
    return this;
  }

  public XmlJsonDataFormat withRootName(String value) {
    setRootName(value);
    return this;
  }

  public XmlJsonDataFormat withSkipWhitespace(Boolean value) {
    setSkipWhitespace(value);
    return this;
  }

  public XmlJsonDataFormat withTrimSpaces(Boolean value) {
    setTrimSpaces(value);
    return this;
  }

  public XmlJsonDataFormat withSkipNamespaces(Boolean value) {
    setSkipNamespaces(value);
    return this;
  }

  public XmlJsonDataFormat withRemoveNamespacePrefixes(Boolean value) {
    setRemoveNamespacePrefixes(value);
    return this;
  }

  public XmlJsonDataFormat withExpandableProperties(String... values) {
    if (values != null) {
      for (String value : values) {
        getExpandableProperties().add(value);
      }
    }
    return this;
  }

  public XmlJsonDataFormat withExpandableProperties(Collection<String> values) {
    if (values != null) {
      getExpandableProperties().addAll(values);
    }
    return this;
  }

  public XmlJsonDataFormat withTypeHints(String value) {
    setTypeHints(value);
    return this;
  }

  @Override
  public XmlJsonDataFormat withId(String value) {
    setId(value);
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
