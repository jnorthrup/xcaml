//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.04 at 10:47:31 AM PST
//

package com.microsoft.schemas.office.visio._2010.extension;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * <p>
 * Java class for TextXForm_Type complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TextXForm_Type">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/office/visio/2010/extension}Row_Type">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="TxtPinX" type="{http://schemas.microsoft.com/office/visio/2010/extension}TxtPinX_Type" minOccurs="0"/>
 *         &lt;element name="TxtPinY" type="{http://schemas.microsoft.com/office/visio/2010/extension}TxtPinY_Type" minOccurs="0"/>
 *         &lt;element name="TxtWidth" type="{http://schemas.microsoft.com/office/visio/2010/extension}TxtWidth_Type" minOccurs="0"/>
 *         &lt;element name="TxtHeight" type="{http://schemas.microsoft.com/office/visio/2010/extension}TxtHeight_Type" minOccurs="0"/>
 *         &lt;element name="TxtLocPinX" type="{http://schemas.microsoft.com/office/visio/2010/extension}TxtLocPinX_Type" minOccurs="0"/>
 *         &lt;element name="TxtLocPinY" type="{http://schemas.microsoft.com/office/visio/2010/extension}TxtLocPinY_Type" minOccurs="0"/>
 *         &lt;element name="TxtAngle" type="{http://schemas.microsoft.com/office/visio/2010/extension}TxtAngle_Type" minOccurs="0"/>
 *       &lt;/choice>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TextXForm_Type", propOrder = {"txtPinXOrTxtPinYOrTxtWidth"})
public class TextXFormType extends RowType {

  @XmlElements({
      @XmlElement(name = "TxtPinX", type = TxtPinXType.class),
      @XmlElement(name = "TxtPinY", type = TxtPinYType.class),
      @XmlElement(name = "TxtWidth", type = TxtWidthType.class),
      @XmlElement(name = "TxtHeight", type = TxtHeightType.class),
      @XmlElement(name = "TxtLocPinX", type = TxtLocPinXType.class),
      @XmlElement(name = "TxtLocPinY", type = TxtLocPinYType.class),
      @XmlElement(name = "TxtAngle", type = TxtAngleType.class)})
  protected List<CellType> txtPinXOrTxtPinYOrTxtWidth;

  /**
   * Gets the value of the txtPinXOrTxtPinYOrTxtWidth property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the txtPinXOrTxtPinYOrTxtWidth property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getTxtPinXOrTxtPinYOrTxtWidth().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link TxtPinXType } {@link TxtPinYType }
   * {@link TxtWidthType } {@link TxtHeightType } {@link TxtLocPinXType } {@link TxtLocPinYType } {@link TxtAngleType }
   * 
   * 
   */
  public List<CellType> getTxtPinXOrTxtPinYOrTxtWidth() {
    if (txtPinXOrTxtPinYOrTxtWidth == null) {
      txtPinXOrTxtPinYOrTxtWidth = new ArrayList<CellType>();
    }
    return this.txtPinXOrTxtPinYOrTxtWidth;
  }

  public TextXFormType withTxtPinXOrTxtPinYOrTxtWidth(CellType... values) {
    if (values != null) {
      for (CellType value : values) {
        getTxtPinXOrTxtPinYOrTxtWidth().add(value);
      }
    }
    return this;
  }

  public TextXFormType withTxtPinXOrTxtPinYOrTxtWidth(Collection<CellType> values) {
    if (values != null) {
      getTxtPinXOrTxtPinYOrTxtWidth().addAll(values);
    }
    return this;
  }

  @Override
  public TextXFormType withDel(BigInteger value) {
    setDel(value);
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
