//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.04 at 10:47:30 AM PST
//

package com.microsoft.schemas.visio._2003.core;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * <p>
 * Java class for Image_Type complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Image_Type">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/visio/2003/core}Row_Type">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="Gamma" type="{http://schemas.microsoft.com/visio/2003/core}Gamma_Type" minOccurs="0"/>
 *         &lt;element name="Contrast" type="{http://schemas.microsoft.com/visio/2003/core}Contrast_Type" minOccurs="0"/>
 *         &lt;element name="Brightness" type="{http://schemas.microsoft.com/visio/2003/core}Brightness_Type" minOccurs="0"/>
 *         &lt;element name="Sharpen" type="{http://schemas.microsoft.com/visio/2003/core}Sharpen_Type" minOccurs="0"/>
 *         &lt;element name="Blur" type="{http://schemas.microsoft.com/visio/2003/core}Blur_Type" minOccurs="0"/>
 *         &lt;element name="Denoise" type="{http://schemas.microsoft.com/visio/2003/core}Denoise_Type" minOccurs="0"/>
 *         &lt;element name="Transparency" type="{http://schemas.microsoft.com/visio/2003/core}Transparency_Type" minOccurs="0"/>
 *       &lt;/choice>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Image_Type", propOrder = {"gammaOrContrastOrBrightness"})
public class ImageType extends RowType {

  @XmlElements({
      @XmlElement(name = "Gamma", type = GammaType.class),
      @XmlElement(name = "Contrast", type = ContrastType.class),
      @XmlElement(name = "Brightness", type = BrightnessType.class),
      @XmlElement(name = "Sharpen", type = SharpenType.class),
      @XmlElement(name = "Blur", type = BlurType.class),
      @XmlElement(name = "Denoise", type = DenoiseType.class),
      @XmlElement(name = "Transparency", type = TransparencyType.class)})
  protected List<CellType> gammaOrContrastOrBrightness;

  /**
   * Gets the value of the gammaOrContrastOrBrightness property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the gammaOrContrastOrBrightness property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getGammaOrContrastOrBrightness().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link GammaType } {@link ContrastType }
   * {@link BrightnessType } {@link SharpenType } {@link BlurType } {@link DenoiseType } {@link TransparencyType }
   * 
   * 
   */
  public List<CellType> getGammaOrContrastOrBrightness() {
    if (gammaOrContrastOrBrightness == null) {
      gammaOrContrastOrBrightness = new ArrayList<CellType>();
    }
    return this.gammaOrContrastOrBrightness;
  }

  public ImageType withGammaOrContrastOrBrightness(CellType... values) {
    if (values != null) {
      for (CellType value : values) {
        getGammaOrContrastOrBrightness().add(value);
      }
    }
    return this;
  }

  public ImageType withGammaOrContrastOrBrightness(Collection<CellType> values) {
    if (values != null) {
      getGammaOrContrastOrBrightness().addAll(values);
    }
    return this;
  }

  @Override
  public ImageType withDel(BigInteger value) {
    setDel(value);
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
