//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.04 at 10:47:30 AM PST
//

package com.microsoft.schemas.visio._2003.core;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;
import org.w3c.dom.Element;

/**
 * <p>
 * Java class for ShapeSheet_Type complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ShapeSheet_Type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="Text" type="{http://schemas.microsoft.com/visio/2003/core}Text_Type" minOccurs="0"/>
 *         &lt;element name="XForm" type="{http://schemas.microsoft.com/visio/2003/core}XForm_Type" minOccurs="0"/>
 *         &lt;element name="Line" type="{http://schemas.microsoft.com/visio/2003/core}Line_Type" minOccurs="0"/>
 *         &lt;element name="Fill" type="{http://schemas.microsoft.com/visio/2003/core}Fill_Type" minOccurs="0"/>
 *         &lt;element name="XForm1D" type="{http://schemas.microsoft.com/visio/2003/core}XForm1D_Type" minOccurs="0"/>
 *         &lt;element name="Event" type="{http://schemas.microsoft.com/visio/2003/core}Event_Type" minOccurs="0"/>
 *         &lt;element name="LayerMem" type="{http://schemas.microsoft.com/visio/2003/core}LayerMem_Type" minOccurs="0"/>
 *         &lt;element name="StyleProp" type="{http://schemas.microsoft.com/visio/2003/core}StyleProp_Type" minOccurs="0"/>
 *         &lt;element name="Foreign" type="{http://schemas.microsoft.com/visio/2003/core}Foreign_Type" minOccurs="0"/>
 *         &lt;element name="PageProps" type="{http://schemas.microsoft.com/visio/2003/core}PageProps_Type" minOccurs="0"/>
 *         &lt;element name="TextBlock" type="{http://schemas.microsoft.com/visio/2003/core}TextBlock_Type" minOccurs="0"/>
 *         &lt;element name="TextXForm" type="{http://schemas.microsoft.com/visio/2003/core}TextXForm_Type" minOccurs="0"/>
 *         &lt;element name="Align" type="{http://schemas.microsoft.com/visio/2003/core}Align_Type" minOccurs="0"/>
 *         &lt;element name="Protection" type="{http://schemas.microsoft.com/visio/2003/core}Protection_Type" minOccurs="0"/>
 *         &lt;element name="Help" type="{http://schemas.microsoft.com/visio/2003/core}Help_Type" minOccurs="0"/>
 *         &lt;element name="Misc" type="{http://schemas.microsoft.com/visio/2003/core}Misc_Type" minOccurs="0"/>
 *         &lt;element name="RulerGrid" type="{http://schemas.microsoft.com/visio/2003/core}RulerGrid_Type" minOccurs="0"/>
 *         &lt;element name="DocProps" type="{http://schemas.microsoft.com/visio/2003/core}DocProps_Type" minOccurs="0"/>
 *         &lt;element name="Image" type="{http://schemas.microsoft.com/visio/2003/core}Image_Type" minOccurs="0"/>
 *         &lt;element name="Group" type="{http://schemas.microsoft.com/visio/2003/core}Group_Type" minOccurs="0"/>
 *         &lt;element name="Layout" type="{http://schemas.microsoft.com/visio/2003/core}Layout_Type" minOccurs="0"/>
 *         &lt;element name="PageLayout" type="{http://schemas.microsoft.com/visio/2003/core}PageLayout_Type" minOccurs="0"/>
 *         &lt;element name="PrintProps" type="{http://schemas.microsoft.com/visio/2003/core}PrintProps_Type" minOccurs="0"/>
 *         &lt;element name="Char" type="{http://schemas.microsoft.com/visio/2003/core}Char_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Para" type="{http://schemas.microsoft.com/visio/2003/core}Para_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Tabs" type="{http://schemas.microsoft.com/visio/2003/core}Tabs_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Scratch" type="{http://schemas.microsoft.com/visio/2003/core}Scratch_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Connection" type="{http://schemas.microsoft.com/visio/2003/core}Connection_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ConnectionABCD" type="{http://schemas.microsoft.com/visio/2003/core}ConnectionABCD_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Field" type="{http://schemas.microsoft.com/visio/2003/core}Field_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Control" type="{http://schemas.microsoft.com/visio/2003/core}Control_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Geom" type="{http://schemas.microsoft.com/visio/2003/core}Geom_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Act" type="{http://schemas.microsoft.com/visio/2003/core}Act_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Layer" type="{http://schemas.microsoft.com/visio/2003/core}Layer_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="User" type="{http://schemas.microsoft.com/visio/2003/core}User_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Prop" type="{http://schemas.microsoft.com/visio/2003/core}Prop_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Hyperlink" type="{http://schemas.microsoft.com/visio/2003/core}Hyperlink_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Reviewer" type="{http://schemas.microsoft.com/visio/2003/core}Reviewer_Type" minOccurs="0"/>
 *         &lt;element name="Annotation" type="{http://schemas.microsoft.com/visio/2003/core}Annotation_Type" minOccurs="0"/>
 *         &lt;element name="SmartTagDef" type="{http://schemas.microsoft.com/visio/2003/core}SmartTagDef_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Data1" type="{http://schemas.microsoft.com/visio/2003/core}Data1_Type" minOccurs="0"/>
 *         &lt;element name="Data2" type="{http://schemas.microsoft.com/visio/2003/core}Data2_Type" minOccurs="0"/>
 *         &lt;element name="Data3" type="{http://schemas.microsoft.com/visio/2003/core}Data3_Type" minOccurs="0"/>
 *         &lt;element name="ForeignData" type="{http://schemas.microsoft.com/visio/2003/core}ForeignData_Type" minOccurs="0"/>
 *         &lt;any processContents='lax' namespace='##other'/>
 *       &lt;/choice>
 *       &lt;attribute name="LineStyle" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;attribute name="FillStyle" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;attribute name="TextStyle" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ShapeSheet_Type", propOrder = {"textOrXFormOrLine"})
@XmlSeeAlso({DocumentSheetType.class, PageSheetType.class, ShapeType.class, StyleSheetType.class})
public class ShapeSheetType {

  @XmlElementRefs({
      @XmlElementRef(name = "Para", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Act", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Data1", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Foreign", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Hyperlink", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PageProps", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Help", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Annotation", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Layer", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Group", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Protection", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Data2", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Control", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "TextBlock", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Char", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Connection", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "TextXForm", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "RulerGrid", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Line", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Align", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "ConnectionABCD", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "StyleProp", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Reviewer", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Data3", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "User", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Field", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Event", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "XForm1D", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "SmartTagDef", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Text", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Tabs", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Scratch", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "DocProps", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PrintProps", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Fill", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "XForm", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Misc", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Image", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Prop", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "ForeignData", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "LayerMem", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Geom", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "PageLayout", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "Layout", namespace = "http://schemas.microsoft.com/visio/2003/core", type = JAXBElement.class, required = false)})
  @XmlAnyElement(lax = true)
  protected List<Object> textOrXFormOrLine;
  @XmlAttribute(name = "LineStyle")
  @XmlSchemaType(name = "unsignedLong")
  protected BigInteger lineStyle;
  @XmlAttribute(name = "FillStyle")
  @XmlSchemaType(name = "unsignedLong")
  protected BigInteger fillStyle;
  @XmlAttribute(name = "TextStyle")
  @XmlSchemaType(name = "unsignedLong")
  protected BigInteger textStyle;
  @XmlAnyAttribute
  private Map<QName, String> otherAttributes = new HashMap<QName, String>();

  /**
   * Gets the value of the textOrXFormOrLine property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the textOrXFormOrLine property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getTextOrXFormOrLine().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link JAXBElement }{@code <}{@link ParaType }{@code >}
   * {@link JAXBElement }{@code <}{@link ActType }{@code >} {@link JAXBElement }{@code <}{@link Data1Type }{@code >}
   * {@link JAXBElement }{@code <}{@link ForeignType }{@code >} {@link JAXBElement }{@code <}{@link HyperlinkType }{@code >}
   * {@link JAXBElement }{@code <}{@link PagePropsType }{@code >} {@link JAXBElement }{@code <}{@link HelpType }{@code >}
   * {@link JAXBElement }{@code <}{@link AnnotationType }{@code >} {@link JAXBElement }{@code <}{@link LayerType }{@code >}
   * {@link JAXBElement }{@code <}{@link GroupType }{@code >} {@link JAXBElement }{@code <}{@link ProtectionType }{@code >}
   * {@link JAXBElement }{@code <}{@link Data2Type }{@code >} {@link JAXBElement }{@code <}{@link ControlType }{@code >}
   * {@link JAXBElement }{@code <}{@link TextBlockType }{@code >} {@link JAXBElement }{@code <}{@link CharType }{@code >}
   * {@link JAXBElement }{@code <}{@link ConnectionType }{@code >} {@link JAXBElement }{@code <}{@link TextXFormType }
   * {@code >} {@link JAXBElement }{@code <}{@link RulerGridType }{@code >} {@link JAXBElement }{@code <}{@link LineType }
   * {@code >} {@link JAXBElement }{@code <}{@link AlignType }{@code >} {@link JAXBElement }{@code <}
   * {@link ConnectionABCDType }{@code >} {@link JAXBElement }{@code <}{@link StylePropType }{@code >} {@link JAXBElement }
   * {@code <}{@link ReviewerType }{@code >} {@link JAXBElement }{@code <}{@link Data3Type }{@code >} {@link JAXBElement }
   * {@code <}{@link UserType }{@code >} {@link Object } {@link JAXBElement }{@code <}{@link FieldType }{@code >}
   * {@link JAXBElement }{@code <}{@link EventType }{@code >} {@link JAXBElement }{@code <}{@link XForm1DType }{@code >}
   * {@link JAXBElement }{@code <}{@link SmartTagDefType }{@code >} {@link JAXBElement }{@code <}{@link TextType }{@code >}
   * {@link JAXBElement }{@code <}{@link TabsType }{@code >} {@link JAXBElement }{@code <}{@link ScratchType }{@code >}
   * {@link Element } {@link JAXBElement }{@code <}{@link DocPropsType }{@code >} {@link JAXBElement }{@code <}
   * {@link PrintPropsType }{@code >} {@link JAXBElement }{@code <}{@link FillType }{@code >} {@link JAXBElement }{@code <}
   * {@link XFormType }{@code >} {@link JAXBElement }{@code <}{@link MiscType }{@code >} {@link JAXBElement }{@code <}
   * {@link ImageType }{@code >} {@link JAXBElement }{@code <}{@link PropType }{@code >} {@link JAXBElement }{@code <}
   * {@link ForeignDataType }{@code >} {@link JAXBElement }{@code <}{@link LayerMemType }{@code >} {@link JAXBElement }
   * {@code <}{@link GeomType }{@code >} {@link JAXBElement }{@code <}{@link PageLayoutType }{@code >} {@link JAXBElement }
   * {@code <}{@link LayoutType }{@code >}
   * 
   * 
   */
  public List<Object> getTextOrXFormOrLine() {
    if (textOrXFormOrLine == null) {
      textOrXFormOrLine = new ArrayList<Object>();
    }
    return this.textOrXFormOrLine;
  }

  /**
   * Gets the value of the lineStyle property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getLineStyle() {
    return lineStyle;
  }

  /**
   * Sets the value of the lineStyle property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setLineStyle(BigInteger value) {
    this.lineStyle = value;
  }

  /**
   * Gets the value of the fillStyle property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getFillStyle() {
    return fillStyle;
  }

  /**
   * Sets the value of the fillStyle property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setFillStyle(BigInteger value) {
    this.fillStyle = value;
  }

  /**
   * Gets the value of the textStyle property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getTextStyle() {
    return textStyle;
  }

  /**
   * Sets the value of the textStyle property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setTextStyle(BigInteger value) {
    this.textStyle = value;
  }

  /**
   * Gets a map that contains attributes that aren't bound to any typed property on this class.
   * 
   * <p>
   * the map is keyed by the name of the attribute and the value is the string value of the attribute.
   * 
   * the map returned by this method is live, and you can add new attribute by updating the map directly. Because of
   * this design, there's no setter.
   * 
   * 
   * @return always non-null
   */
  public Map<QName, String> getOtherAttributes() {
    return otherAttributes;
  }

  public ShapeSheetType withTextOrXFormOrLine(Object... values) {
    if (values != null) {
      for (Object value : values) {
        getTextOrXFormOrLine().add(value);
      }
    }
    return this;
  }

  public ShapeSheetType withTextOrXFormOrLine(Collection<Object> values) {
    if (values != null) {
      getTextOrXFormOrLine().addAll(values);
    }
    return this;
  }

  public ShapeSheetType withLineStyle(BigInteger value) {
    setLineStyle(value);
    return this;
  }

  public ShapeSheetType withFillStyle(BigInteger value) {
    setFillStyle(value);
    return this;
  }

  public ShapeSheetType withTextStyle(BigInteger value) {
    setTextStyle(value);
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
