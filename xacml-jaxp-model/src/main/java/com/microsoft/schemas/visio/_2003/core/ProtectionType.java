//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.04 at 10:47:30 AM PST
//

package com.microsoft.schemas.visio._2003.core;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * <p>
 * Java class for Protection_Type complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Protection_Type">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/visio/2003/core}Row_Type">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="LockWidth" type="{http://schemas.microsoft.com/visio/2003/core}LockWidth_Type" minOccurs="0"/>
 *         &lt;element name="LockHeight" type="{http://schemas.microsoft.com/visio/2003/core}LockHeight_Type" minOccurs="0"/>
 *         &lt;element name="LockMoveX" type="{http://schemas.microsoft.com/visio/2003/core}LockMoveX_Type" minOccurs="0"/>
 *         &lt;element name="LockMoveY" type="{http://schemas.microsoft.com/visio/2003/core}LockMoveY_Type" minOccurs="0"/>
 *         &lt;element name="LockAspect" type="{http://schemas.microsoft.com/visio/2003/core}LockAspect_Type" minOccurs="0"/>
 *         &lt;element name="LockDelete" type="{http://schemas.microsoft.com/visio/2003/core}LockDelete_Type" minOccurs="0"/>
 *         &lt;element name="LockBegin" type="{http://schemas.microsoft.com/visio/2003/core}LockBegin_Type" minOccurs="0"/>
 *         &lt;element name="LockEnd" type="{http://schemas.microsoft.com/visio/2003/core}LockEnd_Type" minOccurs="0"/>
 *         &lt;element name="LockRotate" type="{http://schemas.microsoft.com/visio/2003/core}LockRotate_Type" minOccurs="0"/>
 *         &lt;element name="LockCrop" type="{http://schemas.microsoft.com/visio/2003/core}LockCrop_Type" minOccurs="0"/>
 *         &lt;element name="LockVtxEdit" type="{http://schemas.microsoft.com/visio/2003/core}LockVtxEdit_Type" minOccurs="0"/>
 *         &lt;element name="LockTextEdit" type="{http://schemas.microsoft.com/visio/2003/core}LockTextEdit_Type" minOccurs="0"/>
 *         &lt;element name="LockFormat" type="{http://schemas.microsoft.com/visio/2003/core}LockFormat_Type" minOccurs="0"/>
 *         &lt;element name="LockGroup" type="{http://schemas.microsoft.com/visio/2003/core}LockGroup_Type" minOccurs="0"/>
 *         &lt;element name="LockCalcWH" type="{http://schemas.microsoft.com/visio/2003/core}LockCalcWH_Type" minOccurs="0"/>
 *         &lt;element name="LockSelect" type="{http://schemas.microsoft.com/visio/2003/core}LockSelect_Type" minOccurs="0"/>
 *         &lt;element name="LockCustProp" type="{http://schemas.microsoft.com/visio/2003/core}LockCustProp_Type" minOccurs="0"/>
 *       &lt;/choice>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Protection_Type", propOrder = {"lockWidthOrLockHeightOrLockMoveX"})
public class ProtectionType extends RowType {

  @XmlElements({
      @XmlElement(name = "LockWidth", type = LockWidthType.class),
      @XmlElement(name = "LockHeight", type = LockHeightType.class),
      @XmlElement(name = "LockMoveX", type = LockMoveXType.class),
      @XmlElement(name = "LockMoveY", type = LockMoveYType.class),
      @XmlElement(name = "LockAspect", type = LockAspectType.class),
      @XmlElement(name = "LockDelete", type = LockDeleteType.class),
      @XmlElement(name = "LockBegin", type = LockBeginType.class),
      @XmlElement(name = "LockEnd", type = LockEndType.class),
      @XmlElement(name = "LockRotate", type = LockRotateType.class),
      @XmlElement(name = "LockCrop", type = LockCropType.class),
      @XmlElement(name = "LockVtxEdit", type = LockVtxEditType.class),
      @XmlElement(name = "LockTextEdit", type = LockTextEditType.class),
      @XmlElement(name = "LockFormat", type = LockFormatType.class),
      @XmlElement(name = "LockGroup", type = LockGroupType.class),
      @XmlElement(name = "LockCalcWH", type = LockCalcWHType.class),
      @XmlElement(name = "LockSelect", type = LockSelectType.class),
      @XmlElement(name = "LockCustProp", type = LockCustPropType.class)})
  protected List<CellType> lockWidthOrLockHeightOrLockMoveX;

  /**
   * Gets the value of the lockWidthOrLockHeightOrLockMoveX property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the lockWidthOrLockHeightOrLockMoveX property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getLockWidthOrLockHeightOrLockMoveX().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link LockWidthType } {@link LockHeightType }
   * {@link LockMoveXType } {@link LockMoveYType } {@link LockAspectType } {@link LockDeleteType } {@link LockBeginType }
   * {@link LockEndType } {@link LockRotateType } {@link LockCropType } {@link LockVtxEditType } {@link LockTextEditType }
   * {@link LockFormatType } {@link LockGroupType } {@link LockCalcWHType } {@link LockSelectType } {@link LockCustPropType }
   * 
   * 
   */
  public List<CellType> getLockWidthOrLockHeightOrLockMoveX() {
    if (lockWidthOrLockHeightOrLockMoveX == null) {
      lockWidthOrLockHeightOrLockMoveX = new ArrayList<CellType>();
    }
    return this.lockWidthOrLockHeightOrLockMoveX;
  }

  public ProtectionType withLockWidthOrLockHeightOrLockMoveX(CellType... values) {
    if (values != null) {
      for (CellType value : values) {
        getLockWidthOrLockHeightOrLockMoveX().add(value);
      }
    }
    return this;
  }

  public ProtectionType withLockWidthOrLockHeightOrLockMoveX(Collection<CellType> values) {
    if (values != null) {
      getLockWidthOrLockHeightOrLockMoveX().addAll(values);
    }
    return this;
  }

  @Override
  public ProtectionType withDel(BigInteger value) {
    setDel(value);
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
