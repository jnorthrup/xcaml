//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.04 at 04:25:41 AM PST
//

package de.martin_loetzsch.dotml;

import java.math.BigDecimal;
import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * The root element of a record.
 * 
 * <p>
 * Java class for record-node complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="record-node">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.martin-loetzsch.de/DOTML}record">
 *       &lt;attGroup ref="{http://www.martin-loetzsch.de/DOTML}node-and-record-attributes"/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "record-node")
public class RecordNode extends Record {

  @XmlAttribute(name = "color")
  protected String color;
  @XmlAttribute(name = "fillcolor")
  protected String fillcolor;
  @XmlAttribute(name = "height")
  protected BigDecimal height;
  @XmlAttribute(name = "style")
  protected Style style;
  @XmlAttribute(name = "width")
  protected BigDecimal width;
  @XmlAttribute(name = "fontname")
  protected String fontname;
  @XmlAttribute(name = "fontsize")
  protected BigDecimal fontsize;
  @XmlAttribute(name = "fontcolor")
  protected String fontcolor;

  /**
   * Gets the value of the color property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getColor() {
    return color;
  }

  /**
   * Sets the value of the color property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setColor(String value) {
    this.color = value;
  }

  /**
   * Gets the value of the fillcolor property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getFillcolor() {
    return fillcolor;
  }

  /**
   * Sets the value of the fillcolor property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setFillcolor(String value) {
    this.fillcolor = value;
  }

  /**
   * Gets the value of the height property.
   * 
   * @return possible object is {@link BigDecimal }
   * 
   */
  public BigDecimal getHeight() {
    return height;
  }

  /**
   * Sets the value of the height property.
   * 
   * @param value allowed object is {@link BigDecimal }
   * 
   */
  public void setHeight(BigDecimal value) {
    this.height = value;
  }

  /**
   * Gets the value of the style property.
   * 
   * @return possible object is {@link Style }
   * 
   */
  public Style getStyle() {
    return style;
  }

  /**
   * Sets the value of the style property.
   * 
   * @param value allowed object is {@link Style }
   * 
   */
  public void setStyle(Style value) {
    this.style = value;
  }

  /**
   * Gets the value of the width property.
   * 
   * @return possible object is {@link BigDecimal }
   * 
   */
  public BigDecimal getWidth() {
    return width;
  }

  /**
   * Sets the value of the width property.
   * 
   * @param value allowed object is {@link BigDecimal }
   * 
   */
  public void setWidth(BigDecimal value) {
    this.width = value;
  }

  /**
   * Gets the value of the fontname property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getFontname() {
    return fontname;
  }

  /**
   * Sets the value of the fontname property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setFontname(String value) {
    this.fontname = value;
  }

  /**
   * Gets the value of the fontsize property.
   * 
   * @return possible object is {@link BigDecimal }
   * 
   */
  public BigDecimal getFontsize() {
    return fontsize;
  }

  /**
   * Sets the value of the fontsize property.
   * 
   * @param value allowed object is {@link BigDecimal }
   * 
   */
  public void setFontsize(BigDecimal value) {
    this.fontsize = value;
  }

  /**
   * Gets the value of the fontcolor property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getFontcolor() {
    return fontcolor;
  }

  /**
   * Sets the value of the fontcolor property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setFontcolor(String value) {
    this.fontcolor = value;
  }

  public RecordNode withColor(String value) {
    setColor(value);
    return this;
  }

  public RecordNode withFillcolor(String value) {
    setFillcolor(value);
    return this;
  }

  public RecordNode withHeight(BigDecimal value) {
    setHeight(value);
    return this;
  }

  public RecordNode withStyle(Style value) {
    setStyle(value);
    return this;
  }

  public RecordNode withWidth(BigDecimal value) {
    setWidth(value);
    return this;
  }

  public RecordNode withFontname(String value) {
    setFontname(value);
    return this;
  }

  public RecordNode withFontsize(BigDecimal value) {
    setFontsize(value);
    return this;
  }

  public RecordNode withFontcolor(String value) {
    setFontcolor(value);
    return this;
  }

  @Override
  public RecordNode withNodeOrRecord(Object... values) {
    if (values != null) {
      for (Object value : values) {
        getNodeOrRecord().add(value);
      }
    }
    return this;
  }

  @Override
  public RecordNode withNodeOrRecord(Collection<Object> values) {
    if (values != null) {
      getNodeOrRecord().addAll(values);
    }
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
