//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.10-b140310.1920 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.24 at 02:28:45 PM PDT 
//


package org.apache.camel.schema.spring;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{http://camel.apache.org/schema/spring}abstractCamelContextFactoryBean">
 *       &lt;sequence>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}properties" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}propertyPlaceholder" minOccurs="0"/>
 *         &lt;element name="package" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}packageScan" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}contextScan" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}streamCaching" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}jmxAgent" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{http://camel.apache.org/schema/spring}template"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}consumerTemplate"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}proxy"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}export"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}errorHandler"/>
 *         &lt;/choice>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}routeBuilder" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}routeContextRef" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}restContextRef" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}threadPoolProfile" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}threadPool" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}endpoint" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}dataFormats" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}redeliveryPolicyProfile" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}onException" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}onCompletion" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}intercept" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}interceptFrom" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="interceptSendToEndpoint" type="{http://camel.apache.org/schema/spring}interceptSendToEndpointDefinition" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}restConfiguration" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}rest" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://camel.apache.org/schema/spring}route" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="depends-on" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="trace" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="messageHistory" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="streamCache" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="delayer" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="handleFault" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="errorHandlerRef" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="autoStartup" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="shutdownEager" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="useMDCLogging" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="useBreadcrumb" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="allowUseOriginalMessage" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="runtimeEndpointRegistryEnabled" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="managementNamePattern" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="threadNamePattern" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="shutdownRoute" type="{http://camel.apache.org/schema/spring}shutdownRoute" />
 *       &lt;attribute name="shutdownRunningTask" type="{http://camel.apache.org/schema/spring}shutdownRunningTask" />
 *       &lt;attribute name="lazyLoadTypeConverters" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="typeConverterStatisticsEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "properties",
    "propertyPlaceholder",
    "_package",
    "packageScan",
    "contextScan",
    "streamCaching",
    "jmxAgent",
    "templateOrConsumerTemplateOrProxy",
    "routeBuilder",
    "routeContextRef",
    "restContextRef",
    "threadPoolProfile",
    "threadPool",
    "endpoint",
    "dataFormats",
    "redeliveryPolicyProfile",
    "onException",
    "onCompletion",
    "intercept",
    "interceptFrom",
    "interceptSendToEndpoint",
    "restConfiguration",
    "rest",
    "route"
})
@XmlRootElement(name = "camelContext")
public class CamelContextElement
    extends AbstractCamelContextFactoryBean
{

    protected PropertiesElement properties;
    protected PropertyPlaceholderElement propertyPlaceholder;
    @XmlElement(name = "package")
    protected List<String> _package;
    protected PackageScanElement packageScan;
    protected ContextScanElement contextScan;
    protected CamelStreamCachingStrategyDefinition streamCaching;
    protected JmxAgentElement jmxAgent;
    @XmlElements({
        @XmlElement(name = "template", type = CamelProducerTemplateFactoryBean.class),
        @XmlElement(name = "consumerTemplate", type = CamelConsumerTemplateFactoryBean.class),
        @XmlElement(name = "proxy", type = CamelProxyFactoryDefinition.class),
        @XmlElement(name = "export", type = ExportElement.class),
        @XmlElement(name = "errorHandler", type = ErrorHandlerDefinition.class)
    })
    protected List<IdentifiedType> templateOrConsumerTemplateOrProxy;
    protected List<RouteBuilderElement> routeBuilder;
    protected List<RouteContextRefDefinition> routeContextRef;
    protected List<RestContextRefDefinition> restContextRef;
    protected List<ThreadPoolProfileDefinition> threadPoolProfile;
    protected List<CamelThreadPoolFactoryBean> threadPool;
    protected List<EndpointElement> endpoint;
    protected DataFormatsDefinition dataFormats;
    protected List<CamelRedeliveryPolicyFactoryBean> redeliveryPolicyProfile;
    protected List<OnExceptionDefinition> onException;
    protected List<OnCompletionDefinition> onCompletion;
    protected List<InterceptDefinition> intercept;
    protected List<InterceptFromDefinition> interceptFrom;
    protected List<InterceptSendToEndpointDefinition> interceptSendToEndpoint;
    protected RestConfigurationDefinition restConfiguration;
    protected List<RestDefinition> rest;
    protected List<RouteElement> route;
    @XmlAttribute(name = "depends-on")
    protected String dependsOn;
    @XmlAttribute(name = "trace")
    protected String trace;
    @XmlAttribute(name = "messageHistory")
    protected String messageHistory;
    @XmlAttribute(name = "streamCache")
    protected String streamCache;
    @XmlAttribute(name = "delayer")
    protected String delayer;
    @XmlAttribute(name = "handleFault")
    protected String handleFault;
    @XmlAttribute(name = "errorHandlerRef")
    protected String errorHandlerRef;
    @XmlAttribute(name = "autoStartup")
    protected String autoStartup;
    @XmlAttribute(name = "shutdownEager")
    protected String shutdownEager;
    @XmlAttribute(name = "useMDCLogging")
    protected String useMDCLogging;
    @XmlAttribute(name = "useBreadcrumb")
    protected String useBreadcrumb;
    @XmlAttribute(name = "allowUseOriginalMessage")
    protected String allowUseOriginalMessage;
    @XmlAttribute(name = "runtimeEndpointRegistryEnabled")
    protected String runtimeEndpointRegistryEnabled;
    @XmlAttribute(name = "managementNamePattern")
    protected String managementNamePattern;
    @XmlAttribute(name = "threadNamePattern")
    protected String threadNamePattern;
    @XmlAttribute(name = "shutdownRoute")
    protected ShutdownRoute shutdownRoute;
    @XmlAttribute(name = "shutdownRunningTask")
    protected ShutdownRunningTask shutdownRunningTask;
    @XmlAttribute(name = "lazyLoadTypeConverters")
    protected Boolean lazyLoadTypeConverters;
    @XmlAttribute(name = "typeConverterStatisticsEnabled")
    protected Boolean typeConverterStatisticsEnabled;

    /**
     * Gets the value of the properties property.
     * 
     * @return
     *     possible object is
     *     {@link PropertiesElement }
     *     
     */
    public PropertiesElement getProperties() {
        return properties;
    }

    /**
     * Sets the value of the properties property.
     * 
     * @param value
     *     allowed object is
     *     {@link PropertiesElement }
     *     
     */
    public void setProperties(PropertiesElement value) {
        this.properties = value;
    }

    /**
     * Gets the value of the propertyPlaceholder property.
     * 
     * @return
     *     possible object is
     *     {@link PropertyPlaceholderElement }
     *     
     */
    public PropertyPlaceholderElement getPropertyPlaceholder() {
        return propertyPlaceholder;
    }

    /**
     * Sets the value of the propertyPlaceholder property.
     * 
     * @param value
     *     allowed object is
     *     {@link PropertyPlaceholderElement }
     *     
     */
    public void setPropertyPlaceholder(PropertyPlaceholderElement value) {
        this.propertyPlaceholder = value;
    }

    /**
     * Gets the value of the package property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the package property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPackage().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getPackage() {
        if (_package == null) {
            _package = new ArrayList<String>();
        }
        return this._package;
    }

    /**
     * Gets the value of the packageScan property.
     * 
     * @return
     *     possible object is
     *     {@link PackageScanElement }
     *     
     */
    public PackageScanElement getPackageScan() {
        return packageScan;
    }

    /**
     * Sets the value of the packageScan property.
     * 
     * @param value
     *     allowed object is
     *     {@link PackageScanElement }
     *     
     */
    public void setPackageScan(PackageScanElement value) {
        this.packageScan = value;
    }

    /**
     * Gets the value of the contextScan property.
     * 
     * @return
     *     possible object is
     *     {@link ContextScanElement }
     *     
     */
    public ContextScanElement getContextScan() {
        return contextScan;
    }

    /**
     * Sets the value of the contextScan property.
     * 
     * @param value
     *     allowed object is
     *     {@link ContextScanElement }
     *     
     */
    public void setContextScan(ContextScanElement value) {
        this.contextScan = value;
    }

    /**
     * Gets the value of the streamCaching property.
     * 
     * @return
     *     possible object is
     *     {@link CamelStreamCachingStrategyDefinition }
     *     
     */
    public CamelStreamCachingStrategyDefinition getStreamCaching() {
        return streamCaching;
    }

    /**
     * Sets the value of the streamCaching property.
     * 
     * @param value
     *     allowed object is
     *     {@link CamelStreamCachingStrategyDefinition }
     *     
     */
    public void setStreamCaching(CamelStreamCachingStrategyDefinition value) {
        this.streamCaching = value;
    }

    /**
     * Gets the value of the jmxAgent property.
     * 
     * @return
     *     possible object is
     *     {@link JmxAgentElement }
     *     
     */
    public JmxAgentElement getJmxAgent() {
        return jmxAgent;
    }

    /**
     * Sets the value of the jmxAgent property.
     * 
     * @param value
     *     allowed object is
     *     {@link JmxAgentElement }
     *     
     */
    public void setJmxAgent(JmxAgentElement value) {
        this.jmxAgent = value;
    }

    /**
     * Gets the value of the templateOrConsumerTemplateOrProxy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the templateOrConsumerTemplateOrProxy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTemplateOrConsumerTemplateOrProxy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CamelProducerTemplateFactoryBean }
     * {@link CamelConsumerTemplateFactoryBean }
     * {@link CamelProxyFactoryDefinition }
     * {@link ExportElement }
     * {@link ErrorHandlerDefinition }
     * 
     * 
     */
    public List<IdentifiedType> getTemplateOrConsumerTemplateOrProxy() {
        if (templateOrConsumerTemplateOrProxy == null) {
            templateOrConsumerTemplateOrProxy = new ArrayList<IdentifiedType>();
        }
        return this.templateOrConsumerTemplateOrProxy;
    }

    /**
     * Gets the value of the routeBuilder property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the routeBuilder property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRouteBuilder().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RouteBuilderElement }
     * 
     * 
     */
    public List<RouteBuilderElement> getRouteBuilder() {
        if (routeBuilder == null) {
            routeBuilder = new ArrayList<RouteBuilderElement>();
        }
        return this.routeBuilder;
    }

    /**
     * Gets the value of the routeContextRef property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the routeContextRef property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRouteContextRef().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RouteContextRefDefinition }
     * 
     * 
     */
    public List<RouteContextRefDefinition> getRouteContextRef() {
        if (routeContextRef == null) {
            routeContextRef = new ArrayList<RouteContextRefDefinition>();
        }
        return this.routeContextRef;
    }

    /**
     * Gets the value of the restContextRef property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the restContextRef property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRestContextRef().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RestContextRefDefinition }
     * 
     * 
     */
    public List<RestContextRefDefinition> getRestContextRef() {
        if (restContextRef == null) {
            restContextRef = new ArrayList<RestContextRefDefinition>();
        }
        return this.restContextRef;
    }

    /**
     * Gets the value of the threadPoolProfile property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the threadPoolProfile property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getThreadPoolProfile().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ThreadPoolProfileDefinition }
     * 
     * 
     */
    public List<ThreadPoolProfileDefinition> getThreadPoolProfile() {
        if (threadPoolProfile == null) {
            threadPoolProfile = new ArrayList<ThreadPoolProfileDefinition>();
        }
        return this.threadPoolProfile;
    }

    /**
     * Gets the value of the threadPool property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the threadPool property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getThreadPool().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CamelThreadPoolFactoryBean }
     * 
     * 
     */
    public List<CamelThreadPoolFactoryBean> getThreadPool() {
        if (threadPool == null) {
            threadPool = new ArrayList<CamelThreadPoolFactoryBean>();
        }
        return this.threadPool;
    }

    /**
     * Gets the value of the endpoint property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the endpoint property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEndpoint().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EndpointElement }
     * 
     * 
     */
    public List<EndpointElement> getEndpoint() {
        if (endpoint == null) {
            endpoint = new ArrayList<EndpointElement>();
        }
        return this.endpoint;
    }

    /**
     * Gets the value of the dataFormats property.
     * 
     * @return
     *     possible object is
     *     {@link DataFormatsDefinition }
     *     
     */
    public DataFormatsDefinition getDataFormats() {
        return dataFormats;
    }

    /**
     * Sets the value of the dataFormats property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataFormatsDefinition }
     *     
     */
    public void setDataFormats(DataFormatsDefinition value) {
        this.dataFormats = value;
    }

    /**
     * Gets the value of the redeliveryPolicyProfile property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the redeliveryPolicyProfile property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRedeliveryPolicyProfile().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CamelRedeliveryPolicyFactoryBean }
     * 
     * 
     */
    public List<CamelRedeliveryPolicyFactoryBean> getRedeliveryPolicyProfile() {
        if (redeliveryPolicyProfile == null) {
            redeliveryPolicyProfile = new ArrayList<CamelRedeliveryPolicyFactoryBean>();
        }
        return this.redeliveryPolicyProfile;
    }

    /**
     * Gets the value of the onException property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the onException property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOnException().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OnExceptionDefinition }
     * 
     * 
     */
    public List<OnExceptionDefinition> getOnException() {
        if (onException == null) {
            onException = new ArrayList<OnExceptionDefinition>();
        }
        return this.onException;
    }

    /**
     * Gets the value of the onCompletion property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the onCompletion property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOnCompletion().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OnCompletionDefinition }
     * 
     * 
     */
    public List<OnCompletionDefinition> getOnCompletion() {
        if (onCompletion == null) {
            onCompletion = new ArrayList<OnCompletionDefinition>();
        }
        return this.onCompletion;
    }

    /**
     * Gets the value of the intercept property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the intercept property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIntercept().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InterceptDefinition }
     * 
     * 
     */
    public List<InterceptDefinition> getIntercept() {
        if (intercept == null) {
            intercept = new ArrayList<InterceptDefinition>();
        }
        return this.intercept;
    }

    /**
     * Gets the value of the interceptFrom property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the interceptFrom property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInterceptFrom().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InterceptFromDefinition }
     * 
     * 
     */
    public List<InterceptFromDefinition> getInterceptFrom() {
        if (interceptFrom == null) {
            interceptFrom = new ArrayList<InterceptFromDefinition>();
        }
        return this.interceptFrom;
    }

    /**
     * Gets the value of the interceptSendToEndpoint property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the interceptSendToEndpoint property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInterceptSendToEndpoint().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InterceptSendToEndpointDefinition }
     * 
     * 
     */
    public List<InterceptSendToEndpointDefinition> getInterceptSendToEndpoint() {
        if (interceptSendToEndpoint == null) {
            interceptSendToEndpoint = new ArrayList<InterceptSendToEndpointDefinition>();
        }
        return this.interceptSendToEndpoint;
    }

    /**
     * Gets the value of the restConfiguration property.
     * 
     * @return
     *     possible object is
     *     {@link RestConfigurationDefinition }
     *     
     */
    public RestConfigurationDefinition getRestConfiguration() {
        return restConfiguration;
    }

    /**
     * Sets the value of the restConfiguration property.
     * 
     * @param value
     *     allowed object is
     *     {@link RestConfigurationDefinition }
     *     
     */
    public void setRestConfiguration(RestConfigurationDefinition value) {
        this.restConfiguration = value;
    }

    /**
     * Gets the value of the rest property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rest property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRest().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RestDefinition }
     * 
     * 
     */
    public List<RestDefinition> getRest() {
        if (rest == null) {
            rest = new ArrayList<RestDefinition>();
        }
        return this.rest;
    }

    /**
     * Gets the value of the route property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the route property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRoute().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RouteElement }
     * 
     * 
     */
    public List<RouteElement> getRoute() {
        if (route == null) {
            route = new ArrayList<RouteElement>();
        }
        return this.route;
    }

    /**
     * Gets the value of the dependsOn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDependsOn() {
        return dependsOn;
    }

    /**
     * Sets the value of the dependsOn property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDependsOn(String value) {
        this.dependsOn = value;
    }

    /**
     * Gets the value of the trace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTrace() {
        return trace;
    }

    /**
     * Sets the value of the trace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTrace(String value) {
        this.trace = value;
    }

    /**
     * Gets the value of the messageHistory property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMessageHistory() {
        return messageHistory;
    }

    /**
     * Sets the value of the messageHistory property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMessageHistory(String value) {
        this.messageHistory = value;
    }

    /**
     * Gets the value of the streamCache property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStreamCache() {
        return streamCache;
    }

    /**
     * Sets the value of the streamCache property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStreamCache(String value) {
        this.streamCache = value;
    }

    /**
     * Gets the value of the delayer property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDelayer() {
        return delayer;
    }

    /**
     * Sets the value of the delayer property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDelayer(String value) {
        this.delayer = value;
    }

    /**
     * Gets the value of the handleFault property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHandleFault() {
        return handleFault;
    }

    /**
     * Sets the value of the handleFault property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHandleFault(String value) {
        this.handleFault = value;
    }

    /**
     * Gets the value of the errorHandlerRef property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getErrorHandlerRef() {
        return errorHandlerRef;
    }

    /**
     * Sets the value of the errorHandlerRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setErrorHandlerRef(String value) {
        this.errorHandlerRef = value;
    }

    /**
     * Gets the value of the autoStartup property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAutoStartup() {
        return autoStartup;
    }

    /**
     * Sets the value of the autoStartup property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAutoStartup(String value) {
        this.autoStartup = value;
    }

    /**
     * Gets the value of the shutdownEager property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShutdownEager() {
        return shutdownEager;
    }

    /**
     * Sets the value of the shutdownEager property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShutdownEager(String value) {
        this.shutdownEager = value;
    }

    /**
     * Gets the value of the useMDCLogging property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUseMDCLogging() {
        return useMDCLogging;
    }

    /**
     * Sets the value of the useMDCLogging property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUseMDCLogging(String value) {
        this.useMDCLogging = value;
    }

    /**
     * Gets the value of the useBreadcrumb property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUseBreadcrumb() {
        return useBreadcrumb;
    }

    /**
     * Sets the value of the useBreadcrumb property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUseBreadcrumb(String value) {
        this.useBreadcrumb = value;
    }

    /**
     * Gets the value of the allowUseOriginalMessage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAllowUseOriginalMessage() {
        return allowUseOriginalMessage;
    }

    /**
     * Sets the value of the allowUseOriginalMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAllowUseOriginalMessage(String value) {
        this.allowUseOriginalMessage = value;
    }

    /**
     * Gets the value of the runtimeEndpointRegistryEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRuntimeEndpointRegistryEnabled() {
        return runtimeEndpointRegistryEnabled;
    }

    /**
     * Sets the value of the runtimeEndpointRegistryEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRuntimeEndpointRegistryEnabled(String value) {
        this.runtimeEndpointRegistryEnabled = value;
    }

    /**
     * Gets the value of the managementNamePattern property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getManagementNamePattern() {
        return managementNamePattern;
    }

    /**
     * Sets the value of the managementNamePattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setManagementNamePattern(String value) {
        this.managementNamePattern = value;
    }

    /**
     * Gets the value of the threadNamePattern property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getThreadNamePattern() {
        return threadNamePattern;
    }

    /**
     * Sets the value of the threadNamePattern property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setThreadNamePattern(String value) {
        this.threadNamePattern = value;
    }

    /**
     * Gets the value of the shutdownRoute property.
     * 
     * @return
     *     possible object is
     *     {@link ShutdownRoute }
     *     
     */
    public ShutdownRoute getShutdownRoute() {
        return shutdownRoute;
    }

    /**
     * Sets the value of the shutdownRoute property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShutdownRoute }
     *     
     */
    public void setShutdownRoute(ShutdownRoute value) {
        this.shutdownRoute = value;
    }

    /**
     * Gets the value of the shutdownRunningTask property.
     * 
     * @return
     *     possible object is
     *     {@link ShutdownRunningTask }
     *     
     */
    public ShutdownRunningTask getShutdownRunningTask() {
        return shutdownRunningTask;
    }

    /**
     * Sets the value of the shutdownRunningTask property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShutdownRunningTask }
     *     
     */
    public void setShutdownRunningTask(ShutdownRunningTask value) {
        this.shutdownRunningTask = value;
    }

    /**
     * Gets the value of the lazyLoadTypeConverters property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isLazyLoadTypeConverters() {
        return lazyLoadTypeConverters;
    }

    /**
     * Sets the value of the lazyLoadTypeConverters property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setLazyLoadTypeConverters(Boolean value) {
        this.lazyLoadTypeConverters = value;
    }

    /**
     * Gets the value of the typeConverterStatisticsEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTypeConverterStatisticsEnabled() {
        return typeConverterStatisticsEnabled;
    }

    /**
     * Sets the value of the typeConverterStatisticsEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTypeConverterStatisticsEnabled(Boolean value) {
        this.typeConverterStatisticsEnabled = value;
    }

    public CamelContextElement withProperties(PropertiesElement value) {
        setProperties(value);
        return this;
    }

    public CamelContextElement withPropertyPlaceholder(PropertyPlaceholderElement value) {
        setPropertyPlaceholder(value);
        return this;
    }

    public CamelContextElement withPackage(String... values) {
        if (values!= null) {
            for (String value: values) {
                getPackage().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withPackage(Collection<String> values) {
        if (values!= null) {
            getPackage().addAll(values);
        }
        return this;
    }

    public CamelContextElement withPackageScan(PackageScanElement value) {
        setPackageScan(value);
        return this;
    }

    public CamelContextElement withContextScan(ContextScanElement value) {
        setContextScan(value);
        return this;
    }

    public CamelContextElement withStreamCaching(CamelStreamCachingStrategyDefinition value) {
        setStreamCaching(value);
        return this;
    }

    public CamelContextElement withJmxAgent(JmxAgentElement value) {
        setJmxAgent(value);
        return this;
    }

    public CamelContextElement withTemplateOrConsumerTemplateOrProxy(IdentifiedType... values) {
        if (values!= null) {
            for (IdentifiedType value: values) {
                getTemplateOrConsumerTemplateOrProxy().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withTemplateOrConsumerTemplateOrProxy(Collection<IdentifiedType> values) {
        if (values!= null) {
            getTemplateOrConsumerTemplateOrProxy().addAll(values);
        }
        return this;
    }

    public CamelContextElement withRouteBuilder(RouteBuilderElement... values) {
        if (values!= null) {
            for (RouteBuilderElement value: values) {
                getRouteBuilder().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withRouteBuilder(Collection<RouteBuilderElement> values) {
        if (values!= null) {
            getRouteBuilder().addAll(values);
        }
        return this;
    }

    public CamelContextElement withRouteContextRef(RouteContextRefDefinition... values) {
        if (values!= null) {
            for (RouteContextRefDefinition value: values) {
                getRouteContextRef().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withRouteContextRef(Collection<RouteContextRefDefinition> values) {
        if (values!= null) {
            getRouteContextRef().addAll(values);
        }
        return this;
    }

    public CamelContextElement withRestContextRef(RestContextRefDefinition... values) {
        if (values!= null) {
            for (RestContextRefDefinition value: values) {
                getRestContextRef().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withRestContextRef(Collection<RestContextRefDefinition> values) {
        if (values!= null) {
            getRestContextRef().addAll(values);
        }
        return this;
    }

    public CamelContextElement withThreadPoolProfile(ThreadPoolProfileDefinition... values) {
        if (values!= null) {
            for (ThreadPoolProfileDefinition value: values) {
                getThreadPoolProfile().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withThreadPoolProfile(Collection<ThreadPoolProfileDefinition> values) {
        if (values!= null) {
            getThreadPoolProfile().addAll(values);
        }
        return this;
    }

    public CamelContextElement withThreadPool(CamelThreadPoolFactoryBean... values) {
        if (values!= null) {
            for (CamelThreadPoolFactoryBean value: values) {
                getThreadPool().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withThreadPool(Collection<CamelThreadPoolFactoryBean> values) {
        if (values!= null) {
            getThreadPool().addAll(values);
        }
        return this;
    }

    public CamelContextElement withEndpoint(EndpointElement... values) {
        if (values!= null) {
            for (EndpointElement value: values) {
                getEndpoint().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withEndpoint(Collection<EndpointElement> values) {
        if (values!= null) {
            getEndpoint().addAll(values);
        }
        return this;
    }

    public CamelContextElement withDataFormats(DataFormatsDefinition value) {
        setDataFormats(value);
        return this;
    }

    public CamelContextElement withRedeliveryPolicyProfile(CamelRedeliveryPolicyFactoryBean... values) {
        if (values!= null) {
            for (CamelRedeliveryPolicyFactoryBean value: values) {
                getRedeliveryPolicyProfile().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withRedeliveryPolicyProfile(Collection<CamelRedeliveryPolicyFactoryBean> values) {
        if (values!= null) {
            getRedeliveryPolicyProfile().addAll(values);
        }
        return this;
    }

    public CamelContextElement withOnException(OnExceptionDefinition... values) {
        if (values!= null) {
            for (OnExceptionDefinition value: values) {
                getOnException().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withOnException(Collection<OnExceptionDefinition> values) {
        if (values!= null) {
            getOnException().addAll(values);
        }
        return this;
    }

    public CamelContextElement withOnCompletion(OnCompletionDefinition... values) {
        if (values!= null) {
            for (OnCompletionDefinition value: values) {
                getOnCompletion().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withOnCompletion(Collection<OnCompletionDefinition> values) {
        if (values!= null) {
            getOnCompletion().addAll(values);
        }
        return this;
    }

    public CamelContextElement withIntercept(InterceptDefinition... values) {
        if (values!= null) {
            for (InterceptDefinition value: values) {
                getIntercept().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withIntercept(Collection<InterceptDefinition> values) {
        if (values!= null) {
            getIntercept().addAll(values);
        }
        return this;
    }

    public CamelContextElement withInterceptFrom(InterceptFromDefinition... values) {
        if (values!= null) {
            for (InterceptFromDefinition value: values) {
                getInterceptFrom().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withInterceptFrom(Collection<InterceptFromDefinition> values) {
        if (values!= null) {
            getInterceptFrom().addAll(values);
        }
        return this;
    }

    public CamelContextElement withInterceptSendToEndpoint(InterceptSendToEndpointDefinition... values) {
        if (values!= null) {
            for (InterceptSendToEndpointDefinition value: values) {
                getInterceptSendToEndpoint().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withInterceptSendToEndpoint(Collection<InterceptSendToEndpointDefinition> values) {
        if (values!= null) {
            getInterceptSendToEndpoint().addAll(values);
        }
        return this;
    }

    public CamelContextElement withRestConfiguration(RestConfigurationDefinition value) {
        setRestConfiguration(value);
        return this;
    }

    public CamelContextElement withRest(RestDefinition... values) {
        if (values!= null) {
            for (RestDefinition value: values) {
                getRest().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withRest(Collection<RestDefinition> values) {
        if (values!= null) {
            getRest().addAll(values);
        }
        return this;
    }

    public CamelContextElement withRoute(RouteElement... values) {
        if (values!= null) {
            for (RouteElement value: values) {
                getRoute().add(value);
            }
        }
        return this;
    }

    public CamelContextElement withRoute(Collection<RouteElement> values) {
        if (values!= null) {
            getRoute().addAll(values);
        }
        return this;
    }

    public CamelContextElement withDependsOn(String value) {
        setDependsOn(value);
        return this;
    }

    public CamelContextElement withTrace(String value) {
        setTrace(value);
        return this;
    }

    public CamelContextElement withMessageHistory(String value) {
        setMessageHistory(value);
        return this;
    }

    public CamelContextElement withStreamCache(String value) {
        setStreamCache(value);
        return this;
    }

    public CamelContextElement withDelayer(String value) {
        setDelayer(value);
        return this;
    }

    public CamelContextElement withHandleFault(String value) {
        setHandleFault(value);
        return this;
    }

    public CamelContextElement withErrorHandlerRef(String value) {
        setErrorHandlerRef(value);
        return this;
    }

    public CamelContextElement withAutoStartup(String value) {
        setAutoStartup(value);
        return this;
    }

    public CamelContextElement withShutdownEager(String value) {
        setShutdownEager(value);
        return this;
    }

    public CamelContextElement withUseMDCLogging(String value) {
        setUseMDCLogging(value);
        return this;
    }

    public CamelContextElement withUseBreadcrumb(String value) {
        setUseBreadcrumb(value);
        return this;
    }

    public CamelContextElement withAllowUseOriginalMessage(String value) {
        setAllowUseOriginalMessage(value);
        return this;
    }

    public CamelContextElement withRuntimeEndpointRegistryEnabled(String value) {
        setRuntimeEndpointRegistryEnabled(value);
        return this;
    }

    public CamelContextElement withManagementNamePattern(String value) {
        setManagementNamePattern(value);
        return this;
    }

    public CamelContextElement withThreadNamePattern(String value) {
        setThreadNamePattern(value);
        return this;
    }

    public CamelContextElement withShutdownRoute(ShutdownRoute value) {
        setShutdownRoute(value);
        return this;
    }

    public CamelContextElement withShutdownRunningTask(ShutdownRunningTask value) {
        setShutdownRunningTask(value);
        return this;
    }

    public CamelContextElement withLazyLoadTypeConverters(Boolean value) {
        setLazyLoadTypeConverters(value);
        return this;
    }

    public CamelContextElement withTypeConverterStatisticsEnabled(Boolean value) {
        setTypeConverterStatisticsEnabled(value);
        return this;
    }

    @Override
    public CamelContextElement withId(String value) {
        setId(value);
        return this;
    }

    /**
     * Generates a String representation of the contents of this type.
     * This is an extension method, produced by the 'ts' xjc plugin
     * 
     */
    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
    }

}
