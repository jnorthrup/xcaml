//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.03.04 at 01:11:38 AM PST
//

package org.apache.camel.schema.spring;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * <p>
 * Java class for loadBalanceDefinition complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="loadBalanceDefinition">
 *   &lt;complexContent>
 *     &lt;extension base="{http://camel.apache.org/schema/spring}processorDefinition">
 *       &lt;sequence>
 *         &lt;choice minOccurs="0">
 *           &lt;element ref="{http://camel.apache.org/schema/spring}failover"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}random"/>
 *           &lt;element name="custom" type="{http://camel.apache.org/schema/spring}customLoadBalancerDefinition"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}roundRobin"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}sticky"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}topic"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}weighted"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}circuitBreaker"/>
 *         &lt;/choice>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{http://camel.apache.org/schema/spring}aop"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}aggregate"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}bean"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}doCatch"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}when"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}choice"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}otherwise"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}convertBodyTo"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}delay"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}dynamicRouter"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}enrich"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}filter"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}doFinally"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}idempotentConsumer"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}inOnly"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}inOut"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}intercept"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}interceptFrom"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}interceptToEndpoint"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}loadBalance"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}log"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}loop"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}marshal"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}multicast"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}onCompletion"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}onException"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}pipeline"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}policy"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}pollEnrich"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}process"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}recipientList"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}removeHeader"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}removeHeaders"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}removeProperty"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}resequence"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}rollback"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}route"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}routingSlip"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}sample"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}setBody"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}setExchangePattern"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}setFaultBody"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}setHeader"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}setOutHeader"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}setProperty"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}sort"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}split"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}stop"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}threads"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}throttle"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}throwException"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}to"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}transacted"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}transform"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}doTry"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}unmarshal"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}validate"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}wireTap"/>
 *           &lt;element ref="{http://camel.apache.org/schema/spring}restBinding"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="ref" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;anyAttribute processContents='skip' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "loadBalanceDefinition", propOrder = {
    "failover", "random", "custom", "roundRobin", "sticky", "topic", "weighted", "circuitBreaker",
    "aopOrAggregateOrBean"})
public class LoadBalanceDefinition extends ProcessorDefinition {

  protected FailoverLoadBalancerDefinition failover;
  protected RandomLoadBalancerDefinition random;
  protected CustomLoadBalancerDefinition custom;
  protected RoundRobinLoadBalancerDefinition roundRobin;
  protected StickyLoadBalancerDefinition sticky;
  protected TopicLoadBalancerDefinition topic;
  protected WeightedLoadBalancerDefinition weighted;
  protected CircuitBreakerLoadBalancerDefinition circuitBreaker;
  @XmlElements({
      @XmlElement(name = "aop", type = AopDefinition.class),
      @XmlElement(name = "aggregate", type = AggregateElement.class),
      @XmlElement(name = "bean", type = BeanElement.class),
      @XmlElement(name = "doCatch", type = CatchDefinition.class),
      @XmlElement(name = "when", type = WhenDefinition.class),
      @XmlElement(name = "choice", type = ChoiceElement.class),
      @XmlElement(name = "otherwise", type = OtherwiseElement.class),
      @XmlElement(name = "convertBodyTo", type = ConvertBodyDefinition.class),
      @XmlElement(name = "delay", type = DelayElement.class),
      @XmlElement(name = "dynamicRouter", type = DynamicRouterDefinition.class),
      @XmlElement(name = "enrich", type = EnrichDefinition.class),
      @XmlElement(name = "filter", type = FilterElement.class),
      @XmlElement(name = "doFinally", type = FinallyDefinition.class),
      @XmlElement(name = "idempotentConsumer", type = IdempotentConsumerDefinition.class),
      @XmlElement(name = "inOnly", type = InOnlyDefinition.class),
      @XmlElement(name = "inOut", type = InOutDefinition.class),
      @XmlElement(name = "intercept", type = InterceptDefinition.class),
      @XmlElement(name = "interceptFrom", type = InterceptFromDefinition.class),
      @XmlElement(name = "interceptToEndpoint", type = InterceptSendToEndpointDefinition.class),
      @XmlElement(name = "loadBalance", type = LoadBalanceDefinition.class),
      @XmlElement(name = "log", type = LogElement.class),
      @XmlElement(name = "loop", type = LoopDefinition.class),
      @XmlElement(name = "marshal", type = MarshalDefinition.class),
      @XmlElement(name = "multicast", type = MulticastDefinition.class),
      @XmlElement(name = "onCompletion", type = OnCompletionDefinition.class),
      @XmlElement(name = "onException", type = OnExceptionDefinition.class),
      @XmlElement(name = "pipeline", type = PipelineElement.class),
      @XmlElement(name = "policy", type = PolicyDefinition.class),
      @XmlElement(name = "pollEnrich", type = PollEnrichDefinition.class),
      @XmlElement(name = "process", type = ProcessElement.class),
      @XmlElement(name = "recipientList", type = RecipientListDefinition.class),
      @XmlElement(name = "removeHeader", type = RemoveHeaderDefinition.class),
      @XmlElement(name = "removeHeaders", type = RemoveHeadersDefinition.class),
      @XmlElement(name = "removeProperty", type = RemovePropertyDefinition.class),
      @XmlElement(name = "resequence", type = ResequenceDefinition.class),
      @XmlElement(name = "rollback", type = RollbackDefinition.class),
      @XmlElement(name = "route", type = RouteElement.class),
      @XmlElement(name = "routingSlip", type = RoutingSlipDefinition.class),
      @XmlElement(name = "sample", type = SamplingDefinition.class),
      @XmlElement(name = "setBody", type = SetBodyDefinition.class),
      @XmlElement(name = "setExchangePattern", type = SetExchangePatternDefinition.class),
      @XmlElement(name = "setFaultBody", type = SetFaultBodyDefinition.class),
      @XmlElement(name = "setHeader", type = SetHeaderDefinition.class),
      @XmlElement(name = "setOutHeader", type = SetOutHeaderDefinition.class),
      @XmlElement(name = "setProperty", type = SetPropertyDefinition.class),
      @XmlElement(name = "sort", type = SortDefinition.class),
      @XmlElement(name = "split", type = SplitDefinition.class),
      @XmlElement(name = "stop", type = StopDefinition.class),
      @XmlElement(name = "threads", type = ThreadsDefinition.class),
      @XmlElement(name = "throttle", type = ThrottleDefinition.class),
      @XmlElement(name = "throwException", type = ThrowExceptionDefinition.class),
      @XmlElement(name = "to", type = ToElement.class),
      @XmlElement(name = "transacted", type = TransactedDefinition.class),
      @XmlElement(name = "transform", type = TransformElement.class),
      @XmlElement(name = "doTry", type = TryDefinition.class),
      @XmlElement(name = "unmarshal", type = UnmarshalDefinition.class),
      @XmlElement(name = "validate", type = ValidateDefinition.class),
      @XmlElement(name = "wireTap", type = WireTapDefinition.class),
      @XmlElement(name = "restBinding", type = RestBindingElement.class)})
  protected List<ProcessorDefinition> aopOrAggregateOrBean;
  @XmlAttribute(name = "ref")
  protected String ref;

  /**
   * Gets the value of the failover property.
   * 
   * @return possible object is {@link FailoverLoadBalancerDefinition }
   * 
   */
  public FailoverLoadBalancerDefinition getFailover() {
    return failover;
  }

  /**
   * Sets the value of the failover property.
   * 
   * @param value allowed object is {@link FailoverLoadBalancerDefinition }
   * 
   */
  public void setFailover(FailoverLoadBalancerDefinition value) {
    this.failover = value;
  }

  /**
   * Gets the value of the random property.
   * 
   * @return possible object is {@link RandomLoadBalancerDefinition }
   * 
   */
  public RandomLoadBalancerDefinition getRandom() {
    return random;
  }

  /**
   * Sets the value of the random property.
   * 
   * @param value allowed object is {@link RandomLoadBalancerDefinition }
   * 
   */
  public void setRandom(RandomLoadBalancerDefinition value) {
    this.random = value;
  }

  /**
   * Gets the value of the custom property.
   * 
   * @return possible object is {@link CustomLoadBalancerDefinition }
   * 
   */
  public CustomLoadBalancerDefinition getCustom() {
    return custom;
  }

  /**
   * Sets the value of the custom property.
   * 
   * @param value allowed object is {@link CustomLoadBalancerDefinition }
   * 
   */
  public void setCustom(CustomLoadBalancerDefinition value) {
    this.custom = value;
  }

  /**
   * Gets the value of the roundRobin property.
   * 
   * @return possible object is {@link RoundRobinLoadBalancerDefinition }
   * 
   */
  public RoundRobinLoadBalancerDefinition getRoundRobin() {
    return roundRobin;
  }

  /**
   * Sets the value of the roundRobin property.
   * 
   * @param value allowed object is {@link RoundRobinLoadBalancerDefinition }
   * 
   */
  public void setRoundRobin(RoundRobinLoadBalancerDefinition value) {
    this.roundRobin = value;
  }

  /**
   * Gets the value of the sticky property.
   * 
   * @return possible object is {@link StickyLoadBalancerDefinition }
   * 
   */
  public StickyLoadBalancerDefinition getSticky() {
    return sticky;
  }

  /**
   * Sets the value of the sticky property.
   * 
   * @param value allowed object is {@link StickyLoadBalancerDefinition }
   * 
   */
  public void setSticky(StickyLoadBalancerDefinition value) {
    this.sticky = value;
  }

  /**
   * Gets the value of the topic property.
   * 
   * @return possible object is {@link TopicLoadBalancerDefinition }
   * 
   */
  public TopicLoadBalancerDefinition getTopic() {
    return topic;
  }

  /**
   * Sets the value of the topic property.
   * 
   * @param value allowed object is {@link TopicLoadBalancerDefinition }
   * 
   */
  public void setTopic(TopicLoadBalancerDefinition value) {
    this.topic = value;
  }

  /**
   * Gets the value of the weighted property.
   * 
   * @return possible object is {@link WeightedLoadBalancerDefinition }
   * 
   */
  public WeightedLoadBalancerDefinition getWeighted() {
    return weighted;
  }

  /**
   * Sets the value of the weighted property.
   * 
   * @param value allowed object is {@link WeightedLoadBalancerDefinition }
   * 
   */
  public void setWeighted(WeightedLoadBalancerDefinition value) {
    this.weighted = value;
  }

  /**
   * Gets the value of the circuitBreaker property.
   * 
   * @return possible object is {@link CircuitBreakerLoadBalancerDefinition }
   * 
   */
  public CircuitBreakerLoadBalancerDefinition getCircuitBreaker() {
    return circuitBreaker;
  }

  /**
   * Sets the value of the circuitBreaker property.
   * 
   * @param value allowed object is {@link CircuitBreakerLoadBalancerDefinition }
   * 
   */
  public void setCircuitBreaker(CircuitBreakerLoadBalancerDefinition value) {
    this.circuitBreaker = value;
  }

  /**
   * Gets the value of the aopOrAggregateOrBean property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the aopOrAggregateOrBean property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getAopOrAggregateOrBean().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link AopDefinition } {@link AggregateElement }
   * {@link BeanElement } {@link CatchDefinition } {@link WhenDefinition } {@link ChoiceElement } {@link OtherwiseElement }
   * {@link ConvertBodyDefinition } {@link DelayElement } {@link DynamicRouterDefinition } {@link EnrichDefinition }
   * {@link FilterElement } {@link FinallyDefinition } {@link IdempotentConsumerDefinition } {@link InOnlyDefinition }
   * {@link InOutDefinition } {@link InterceptDefinition } {@link InterceptFromDefinition }
   * {@link InterceptSendToEndpointDefinition } {@link LoadBalanceDefinition } {@link LogElement } {@link LoopDefinition }
   * {@link MarshalDefinition } {@link MulticastDefinition } {@link OnCompletionDefinition } {@link OnExceptionDefinition }
   * {@link PipelineElement } {@link PolicyDefinition } {@link PollEnrichDefinition } {@link ProcessElement }
   * {@link RecipientListDefinition } {@link RemoveHeaderDefinition } {@link RemoveHeadersDefinition }
   * {@link RemovePropertyDefinition } {@link ResequenceDefinition } {@link RollbackDefinition } {@link RouteElement }
   * {@link RoutingSlipDefinition } {@link SamplingDefinition } {@link SetBodyDefinition }
   * {@link SetExchangePatternDefinition } {@link SetFaultBodyDefinition } {@link SetHeaderDefinition }
   * {@link SetOutHeaderDefinition } {@link SetPropertyDefinition } {@link SortDefinition } {@link SplitDefinition }
   * {@link StopDefinition } {@link ThreadsDefinition } {@link ThrottleDefinition } {@link ThrowExceptionDefinition }
   * {@link ToElement } {@link TransactedDefinition } {@link TransformElement } {@link TryDefinition }
   * {@link UnmarshalDefinition } {@link ValidateDefinition } {@link WireTapDefinition } {@link RestBindingElement }
   * 
   * 
   */
  public List<ProcessorDefinition> getAopOrAggregateOrBean() {
    if (aopOrAggregateOrBean == null) {
      aopOrAggregateOrBean = new ArrayList<ProcessorDefinition>();
    }
    return this.aopOrAggregateOrBean;
  }

  /**
   * Gets the value of the ref property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getRef() {
    return ref;
  }

  /**
   * Sets the value of the ref property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setRef(String value) {
    this.ref = value;
  }

  public LoadBalanceDefinition withFailover(FailoverLoadBalancerDefinition value) {
    setFailover(value);
    return this;
  }

  public LoadBalanceDefinition withRandom(RandomLoadBalancerDefinition value) {
    setRandom(value);
    return this;
  }

  public LoadBalanceDefinition withCustom(CustomLoadBalancerDefinition value) {
    setCustom(value);
    return this;
  }

  public LoadBalanceDefinition withRoundRobin(RoundRobinLoadBalancerDefinition value) {
    setRoundRobin(value);
    return this;
  }

  public LoadBalanceDefinition withSticky(StickyLoadBalancerDefinition value) {
    setSticky(value);
    return this;
  }

  public LoadBalanceDefinition withTopic(TopicLoadBalancerDefinition value) {
    setTopic(value);
    return this;
  }

  public LoadBalanceDefinition withWeighted(WeightedLoadBalancerDefinition value) {
    setWeighted(value);
    return this;
  }

  public LoadBalanceDefinition withCircuitBreaker(CircuitBreakerLoadBalancerDefinition value) {
    setCircuitBreaker(value);
    return this;
  }

  public LoadBalanceDefinition withAopOrAggregateOrBean(ProcessorDefinition... values) {
    if (values != null) {
      for (ProcessorDefinition value : values) {
        getAopOrAggregateOrBean().add(value);
      }
    }
    return this;
  }

  public LoadBalanceDefinition withAopOrAggregateOrBean(Collection<ProcessorDefinition> values) {
    if (values != null) {
      getAopOrAggregateOrBean().addAll(values);
    }
    return this;
  }

  public LoadBalanceDefinition withRef(String value) {
    setRef(value);
    return this;
  }

  @Override
  public LoadBalanceDefinition withInheritErrorHandler(Boolean value) {
    setInheritErrorHandler(value);
    return this;
  }

  @Override
  public LoadBalanceDefinition withDescription(DescriptionElement value) {
    setDescription(value);
    return this;
  }

  @Override
  public LoadBalanceDefinition withCustomId(Boolean value) {
    setCustomId(value);
    return this;
  }

  @Override
  public LoadBalanceDefinition withId(String value) {
    setId(value);
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
