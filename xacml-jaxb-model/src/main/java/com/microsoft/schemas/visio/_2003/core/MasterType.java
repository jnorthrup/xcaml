//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.04 at 10:47:30 AM PST
//

package com.microsoft.schemas.visio._2003.core;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * <p>
 * Java class for Master_Type complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Master_Type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="PageSheet" type="{http://schemas.microsoft.com/visio/2003/core}PageSheet_Type" minOccurs="0"/>
 *         &lt;element name="Shapes" type="{http://schemas.microsoft.com/visio/2003/core}Shapes_Type" minOccurs="0"/>
 *         &lt;element name="Icon" type="{http://schemas.microsoft.com/visio/2003/core}Icon_Type" minOccurs="0"/>
 *         &lt;element name="Connects" type="{http://schemas.microsoft.com/visio/2003/core}Connects_Type" minOccurs="0"/>
 *       &lt;/choice>
 *       &lt;attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;attribute name="BaseID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="UniqueID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="MatchByName" type="{http://schemas.microsoft.com/visio/2003/core}ISOBoolean" />
 *       &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="NameU" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="IconSize" type="{http://www.w3.org/2001/XMLSchema}unsignedShort" />
 *       &lt;attribute name="PatternFlags" type="{http://www.w3.org/2001/XMLSchema}unsignedShort" />
 *       &lt;attribute name="Prompt" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="Hidden" type="{http://schemas.microsoft.com/visio/2003/core}ISOBoolean" />
 *       &lt;attribute name="IconUpdate" type="{http://schemas.microsoft.com/visio/2003/core}ISOBoolean" />
 *       &lt;attribute name="AlignName" type="{http://www.w3.org/2001/XMLSchema}unsignedShort" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Master_Type", propOrder = {"pageSheetOrShapesOrIcon"})
public class MasterType {

  @XmlElements({
      @XmlElement(name = "PageSheet", type = PageSheetType.class),
      @XmlElement(name = "Shapes", type = ShapesType.class),
      @XmlElement(name = "Icon", type = IconType.class),
      @XmlElement(name = "Connects", type = ConnectsType.class)})
  protected List<Object> pageSheetOrShapesOrIcon;
  @XmlAttribute(name = "ID")
  @XmlSchemaType(name = "unsignedLong")
  protected BigInteger id;
  @XmlAttribute(name = "BaseID")
  protected String baseID;
  @XmlAttribute(name = "UniqueID")
  protected String uniqueID;
  @XmlAttribute(name = "MatchByName")
  protected BigInteger matchByName;
  @XmlAttribute(name = "Name")
  protected String name;
  @XmlAttribute(name = "NameU")
  protected String nameU;
  @XmlAttribute(name = "IconSize")
  @XmlSchemaType(name = "unsignedShort")
  protected Integer iconSize;
  @XmlAttribute(name = "PatternFlags")
  @XmlSchemaType(name = "unsignedShort")
  protected Integer patternFlags;
  @XmlAttribute(name = "Prompt")
  protected String prompt;
  @XmlAttribute(name = "Hidden")
  protected BigInteger hidden;
  @XmlAttribute(name = "IconUpdate")
  protected BigInteger iconUpdate;
  @XmlAttribute(name = "AlignName")
  @XmlSchemaType(name = "unsignedShort")
  protected Integer alignName;

  /**
   * Gets the value of the pageSheetOrShapesOrIcon property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the pageSheetOrShapesOrIcon property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getPageSheetOrShapesOrIcon().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link PageSheetType } {@link ShapesType } {@link IconType }
   * {@link ConnectsType }
   * 
   * 
   */
  public List<Object> getPageSheetOrShapesOrIcon() {
    if (pageSheetOrShapesOrIcon == null) {
      pageSheetOrShapesOrIcon = new ArrayList<Object>();
    }
    return this.pageSheetOrShapesOrIcon;
  }

  /**
   * Gets the value of the id property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getID() {
    return id;
  }

  /**
   * Sets the value of the id property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setID(BigInteger value) {
    this.id = value;
  }

  /**
   * Gets the value of the baseID property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getBaseID() {
    return baseID;
  }

  /**
   * Sets the value of the baseID property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setBaseID(String value) {
    this.baseID = value;
  }

  /**
   * Gets the value of the uniqueID property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getUniqueID() {
    return uniqueID;
  }

  /**
   * Sets the value of the uniqueID property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setUniqueID(String value) {
    this.uniqueID = value;
  }

  /**
   * Gets the value of the matchByName property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getMatchByName() {
    return matchByName;
  }

  /**
   * Sets the value of the matchByName property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setMatchByName(BigInteger value) {
    this.matchByName = value;
  }

  /**
   * Gets the value of the name property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getName() {
    return name;
  }

  /**
   * Sets the value of the name property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setName(String value) {
    this.name = value;
  }

  /**
   * Gets the value of the nameU property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getNameU() {
    return nameU;
  }

  /**
   * Sets the value of the nameU property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setNameU(String value) {
    this.nameU = value;
  }

  /**
   * Gets the value of the iconSize property.
   * 
   * @return possible object is {@link Integer }
   * 
   */
  public Integer getIconSize() {
    return iconSize;
  }

  /**
   * Sets the value of the iconSize property.
   * 
   * @param value allowed object is {@link Integer }
   * 
   */
  public void setIconSize(Integer value) {
    this.iconSize = value;
  }

  /**
   * Gets the value of the patternFlags property.
   * 
   * @return possible object is {@link Integer }
   * 
   */
  public Integer getPatternFlags() {
    return patternFlags;
  }

  /**
   * Sets the value of the patternFlags property.
   * 
   * @param value allowed object is {@link Integer }
   * 
   */
  public void setPatternFlags(Integer value) {
    this.patternFlags = value;
  }

  /**
   * Gets the value of the prompt property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getPrompt() {
    return prompt;
  }

  /**
   * Sets the value of the prompt property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setPrompt(String value) {
    this.prompt = value;
  }

  /**
   * Gets the value of the hidden property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getHidden() {
    return hidden;
  }

  /**
   * Sets the value of the hidden property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setHidden(BigInteger value) {
    this.hidden = value;
  }

  /**
   * Gets the value of the iconUpdate property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getIconUpdate() {
    return iconUpdate;
  }

  /**
   * Sets the value of the iconUpdate property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setIconUpdate(BigInteger value) {
    this.iconUpdate = value;
  }

  /**
   * Gets the value of the alignName property.
   * 
   * @return possible object is {@link Integer }
   * 
   */
  public Integer getAlignName() {
    return alignName;
  }

  /**
   * Sets the value of the alignName property.
   * 
   * @param value allowed object is {@link Integer }
   * 
   */
  public void setAlignName(Integer value) {
    this.alignName = value;
  }

  public MasterType withPageSheetOrShapesOrIcon(Object... values) {
    if (values != null) {
      for (Object value : values) {
        getPageSheetOrShapesOrIcon().add(value);
      }
    }
    return this;
  }

  public MasterType withPageSheetOrShapesOrIcon(Collection<Object> values) {
    if (values != null) {
      getPageSheetOrShapesOrIcon().addAll(values);
    }
    return this;
  }

  public MasterType withID(BigInteger value) {
    setID(value);
    return this;
  }

  public MasterType withBaseID(String value) {
    setBaseID(value);
    return this;
  }

  public MasterType withUniqueID(String value) {
    setUniqueID(value);
    return this;
  }

  public MasterType withMatchByName(BigInteger value) {
    setMatchByName(value);
    return this;
  }

  public MasterType withName(String value) {
    setName(value);
    return this;
  }

  public MasterType withNameU(String value) {
    setNameU(value);
    return this;
  }

  public MasterType withIconSize(Integer value) {
    setIconSize(value);
    return this;
  }

  public MasterType withPatternFlags(Integer value) {
    setPatternFlags(value);
    return this;
  }

  public MasterType withPrompt(String value) {
    setPrompt(value);
    return this;
  }

  public MasterType withHidden(BigInteger value) {
    setHidden(value);
    return this;
  }

  public MasterType withIconUpdate(BigInteger value) {
    setIconUpdate(value);
    return this;
  }

  public MasterType withAlignName(Integer value) {
    setAlignName(value);
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
