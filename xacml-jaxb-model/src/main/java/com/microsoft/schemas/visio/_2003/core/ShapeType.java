//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation,
// v2.2.10-b140310.1920
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.02.04 at 10:47:30 AM PST
//

package com.microsoft.schemas.visio._2003.core;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.cxf.xjc.runtime.JAXBToStringStyle;

/**
 * <p>
 * Java class for Shape_Type complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Shape_Type">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/visio/2003/core}ShapeSheet_Type">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="Shapes" type="{http://schemas.microsoft.com/visio/2003/core}Shapes_Type" minOccurs="0"/>
 *       &lt;/choice>
 *       &lt;attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;attribute name="Del" type="{http://schemas.microsoft.com/visio/2003/core}ISOBoolean" />
 *       &lt;attribute name="MasterShape" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;attribute name="UniqueID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="Name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="NameU" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="Master" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;attribute name="Type" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Shape_Type", propOrder = {"shapes"})
public class ShapeType extends ShapeSheetType {

  @XmlElement(name = "Shapes")
  protected List<ShapesType> shapes;
  @XmlAttribute(name = "ID")
  @XmlSchemaType(name = "unsignedLong")
  protected BigInteger id;
  @XmlAttribute(name = "Del")
  protected BigInteger del;
  @XmlAttribute(name = "MasterShape")
  @XmlSchemaType(name = "unsignedLong")
  protected BigInteger masterShape;
  @XmlAttribute(name = "UniqueID")
  protected String uniqueID;
  @XmlAttribute(name = "Name")
  protected String name;
  @XmlAttribute(name = "NameU")
  protected String nameU;
  @XmlAttribute(name = "Master")
  @XmlSchemaType(name = "unsignedLong")
  protected BigInteger master;
  @XmlAttribute(name = "Type")
  protected String type;

  /**
   * Gets the value of the shapes property.
   * 
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to
   * the returned list will be present inside the JAXB object. This is why there is not a <CODE>set</CODE> method for
   * the shapes property.
   * 
   * <p>
   * For example, to add a new item, do as follows:
   * 
   * <pre>
     *    getShapes().add(newItem);
     * </pre>
   * 
   * 
   * <p>
   * Objects of the following type(s) are allowed in the list {@link ShapesType }
   * 
   * 
   */
  public List<ShapesType> getShapes() {
    if (shapes == null) {
      shapes = new ArrayList<ShapesType>();
    }
    return this.shapes;
  }

  /**
   * Gets the value of the id property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getID() {
    return id;
  }

  /**
   * Sets the value of the id property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setID(BigInteger value) {
    this.id = value;
  }

  /**
   * Gets the value of the del property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getDel() {
    return del;
  }

  /**
   * Sets the value of the del property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setDel(BigInteger value) {
    this.del = value;
  }

  /**
   * Gets the value of the masterShape property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getMasterShape() {
    return masterShape;
  }

  /**
   * Sets the value of the masterShape property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setMasterShape(BigInteger value) {
    this.masterShape = value;
  }

  /**
   * Gets the value of the uniqueID property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getUniqueID() {
    return uniqueID;
  }

  /**
   * Sets the value of the uniqueID property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setUniqueID(String value) {
    this.uniqueID = value;
  }

  /**
   * Gets the value of the name property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getName() {
    return name;
  }

  /**
   * Sets the value of the name property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setName(String value) {
    this.name = value;
  }

  /**
   * Gets the value of the nameU property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getNameU() {
    return nameU;
  }

  /**
   * Sets the value of the nameU property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setNameU(String value) {
    this.nameU = value;
  }

  /**
   * Gets the value of the master property.
   * 
   * @return possible object is {@link BigInteger }
   * 
   */
  public BigInteger getMaster() {
    return master;
  }

  /**
   * Sets the value of the master property.
   * 
   * @param value allowed object is {@link BigInteger }
   * 
   */
  public void setMaster(BigInteger value) {
    this.master = value;
  }

  /**
   * Gets the value of the type property.
   * 
   * @return possible object is {@link String }
   * 
   */
  public String getType() {
    return type;
  }

  /**
   * Sets the value of the type property.
   * 
   * @param value allowed object is {@link String }
   * 
   */
  public void setType(String value) {
    this.type = value;
  }

  public ShapeType withShapes(ShapesType... values) {
    if (values != null) {
      for (ShapesType value : values) {
        getShapes().add(value);
      }
    }
    return this;
  }

  public ShapeType withShapes(Collection<ShapesType> values) {
    if (values != null) {
      getShapes().addAll(values);
    }
    return this;
  }

  public ShapeType withID(BigInteger value) {
    setID(value);
    return this;
  }

  public ShapeType withDel(BigInteger value) {
    setDel(value);
    return this;
  }

  public ShapeType withMasterShape(BigInteger value) {
    setMasterShape(value);
    return this;
  }

  public ShapeType withUniqueID(String value) {
    setUniqueID(value);
    return this;
  }

  public ShapeType withName(String value) {
    setName(value);
    return this;
  }

  public ShapeType withNameU(String value) {
    setNameU(value);
    return this;
  }

  public ShapeType withMaster(BigInteger value) {
    setMaster(value);
    return this;
  }

  public ShapeType withType(String value) {
    setType(value);
    return this;
  }

  @Override
  public ShapeType withTextOrXFormOrLine(Object... values) {
    if (values != null) {
      for (Object value : values) {
        getTextOrXFormOrLine().add(value);
      }
    }
    return this;
  }

  @Override
  public ShapeType withTextOrXFormOrLine(Collection<Object> values) {
    if (values != null) {
      getTextOrXFormOrLine().addAll(values);
    }
    return this;
  }

  @Override
  public ShapeType withLineStyle(BigInteger value) {
    setLineStyle(value);
    return this;
  }

  @Override
  public ShapeType withFillStyle(BigInteger value) {
    setFillStyle(value);
    return this;
  }

  @Override
  public ShapeType withTextStyle(BigInteger value) {
    setTextStyle(value);
    return this;
  }

  /**
   * Generates a String representation of the contents of this type. This is an extension method, produced by the 'ts'
   * xjc plugin
   * 
   */
  @Override
  public String toString() {
    return ToStringBuilder.reflectionToString(this, JAXBToStringStyle.DEFAULT_STYLE);
  }

}
